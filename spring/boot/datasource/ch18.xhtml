<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>第 18 章 Spring boot with Datasource</title><link rel="stylesheet" type="text/css" href="../../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="../phoenix/ch17s03.xhtml" title="Configuration"/><link rel="next" href="ch18s02.xhtml" title="多数据源配置"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">第 18 章 Spring boot with Datasource</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="../phoenix/ch17s03.xhtml">上一页</a> </td><th style="width: 60%; text-align: center; ">部分 I. Spring Boot</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="ch18s02.xhtml">下一页</a></td></tr></table><hr/></div></header><section class="chapter" id="index"><div class="titlepage"><div><div><h2 class="title">第 18 章 Spring boot with Datasource</h2></div><div><h3 class="subtitle"><em>数据源配置</em></h3></div></div></div><div class="toc"><div class="toc-title">目录</div><ul class="toc"><li><span class="section"><a href="ch18.xhtml#id840">Master / Slave 主从数据库数据源配置</a></span><ul><li><span class="section"><a href="ch18.xhtml#id837">application.properties</a></span></li><li><span class="section"><a href="ch18.xhtml#id838">配置主从数据源</a></span></li><li><span class="section"><a href="ch18.xhtml#id839">选择数据源</a></span></li></ul></li><li><span class="section"><a href="ch18s02.xhtml">多数据源配置</a></span></li><li><span class="section"><a href="ch18s03.xhtml">JPA 多数据源</a></span></li></ul></div><section class="section" id="id840"><div class="titlepage"><div><div><h3 class="title">Master / Slave 主从数据库数据源配置</h3></div></div></div><section class="section" id="id837"><div class="titlepage"><div><div><h4 class="title">application.properties</h4></div></div></div><pre class="screen">
			
spring.datasource.master.driverClassName = com.mysql.cj.jdbc.Driver
spring.datasource.master.url=jdbc:mysql://192.168.1.240:3306/test?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC&amp;useSSL=false
spring.datasource.master.username = root
spring.datasource.master.password = password

spring.datasource.slave.driverClassName = com.mysql.cj.jdbc.Driver
spring.datasource.slave.url=jdbc:mysql://192.168.1.250:3306/test?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC&amp;useSSL=false
spring.datasource.slave.username = root
spring.datasource.slave.password = password

spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
			
			</pre></section><section class="section" id="id838"><div class="titlepage"><div><div><h4 class="title">配置主从数据源</h4></div></div></div><pre class="programlisting">
			
package cn.netkiller.config;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.autoconfigure.jdbc.DataSourceProperties;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;
import org.springframework.jdbc.core.JdbcTemplate;

@Configuration
public class MultiDataSourceConfig {

	@Bean
	@Primary
	@ConfigurationProperties("spring.datasource.master")
	public DataSourceProperties masterDataSourceProperties() {
		return new DataSourceProperties();
	}

	@Bean("Master")
	@Primary
	@ConfigurationProperties("spring.datasource.master")
	public DataSource masterDataSource() {
		return masterDataSourceProperties().initializeDataSourceBuilder().build();
	}

	@Bean("masterJdbcTemplate")
	@Primary
	public JdbcTemplate masterJdbcTemplate(@Qualifier("Master") DataSource Master) {
		return new JdbcTemplate(Master);
	}

	@Bean
	@ConfigurationProperties("spring.datasource.slave")
	public DataSourceProperties slaveDataSourceProperties() {
		return new DataSourceProperties();
	}

	@Bean(name = "Slave")
	@ConfigurationProperties("spring.datasource.slave")
	public DataSource slaveDataSource() {
		return slaveDataSourceProperties().initializeDataSourceBuilder().build();
	}

	@Bean("slaveJdbcTemplate")
	public JdbcTemplate slaveJdbcTemplate(@Qualifier("Slave") DataSource Master) {
		return new JdbcTemplate(Master);
	}

}
			
			</pre></section><section class="section" id="id839"><div class="titlepage"><div><div><h4 class="title">选择数据源</h4></div></div></div><pre class="programlisting">
			
	// 默认是 Master
	@Autowired
	private JdbcTemplate jdbcTemplate;

	// 或者这样写
	@Qualifier("masterJdbcTemplate")
	@Autowired
	private JdbcTemplate masterJdbcTemplate;
	
	// 下面是 Slave 数据源
	@Qualifier("slaveJdbcTemplate")
	@Autowired
	private JdbcTemplate slaveJdbcTemplate;
			
			</pre></section></section></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="../phoenix/ch17s03.xhtml">上一页</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="../pt01.xhtml">上一级</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="ch18s02.xhtml">下一页</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">Configuration </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../../index.xhtml">起始页</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> 多数据源配置</td></tr></table></div></footer></body></html>