<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Component</title><link rel="stylesheet" type="text/css" href="../../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="ch21s02.xhtml" title="配置"/><link rel="next" href="ch21s04.xhtml" title="查看日志"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">Component</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="ch21s02.xhtml">上一页</a> </td><th style="width: 60%; text-align: center; ">第 21 章 Spring boot with Scheduling</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="ch21s04.xhtml">下一页</a></td></tr></table><hr/></div></header><section class="section" id="id1558"><div class="titlepage"><div><div><h3 class="title">Component</h3></div></div></div><p>在计划任务方法上加上@Scheduled注解，表示该方法是一个计划任务，项目启动后会去扫描该注解的方法并加入计划任务列表。</p><pre class="programlisting">
			
			
package api.schedule;

import java.text.SimpleDateFormat;
import java.util.Date;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

@Component
public class ScheduledTasks {

	private static final Logger log = LoggerFactory.getLogger(ScheduledTasks.class);
	private static final SimpleDateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");
	public final static long ONE_DAY = 24 * 60 * 60 * 1000;
	public final static long ONE_HOUR = 60 * 60 * 1000;
	
	public ScheduledTasks() {
	// TODO Auto-generated constructor stub
	}
	
	@Scheduled(fixedRate = 5000) //5秒运行一次调度任务
		public void echoCurrentTime() {
		log.info("The time is now {}", dateFormat.format(new Date()));
	}
	
	@Scheduled(fixedRate = ONE_DAY)
		public void scheduledTask() {
		System.out.println("每隔一天执行一次调度任务");
	}
	
	@Scheduled(fixedDelay = ONE_HOUR)
		public void scheduleTask2() {
		System.out.println("运行完后隔一小时就执行任务");
	}
	
	@Scheduled(initialDelay = 1000, fixedRate = 5000)
	public void doSomething() {
		// something that should execute periodically
	}
	
	@Scheduled(cron = "0 0/1 * * * ? ")
		public void ScheduledTask3() {
		System.out.println(" 每隔一分钟执行一次任务");
	}

}
			
		</pre></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="ch21s02.xhtml">上一页</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="ch21.xhtml">上一级</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="ch21s04.xhtml">下一页</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">配置 </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../../index.xhtml">起始页</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> 查看日志</td></tr></table></div></footer></body></html>