<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>产生随机数</title><link rel="stylesheet" type="text/css" href="../../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="ch05s09.xhtml" title="默认值"/><link rel="next" href="ch05s11.xhtml" title="多行字符串"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">产生随机数</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="ch05s09.xhtml">上一页</a> </td><th style="width: 60%; text-align: center; ">第 5 章 Properties 配置文件</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="ch05s11.xhtml">下一页</a></td></tr></table><hr/></div></header><section class="section" id="id1487"><div class="titlepage"><div><div><h3 class="title">产生随机数</h3></div></div></div><pre class="screen">
		
my.secret=${random.value}
my.number=${random.int}
my.bignumber=${random.long}
my.uuid=${random.uuid}
my.number.less.than.ten=${random.int(10)}
my.number.in.range=${random.int[1024,65536]}
		
# 随机字符串
cn.netkiller.blog.value=${random.value}
# 随机整数
cn.netkiller.blog.number=${random.int}
# 随机长整数
cn.netkiller.blog.bignumber=${random.long}
# 随机10以内的数
cn.netkiller.blog.1=${random.int(10)}
# 随机10-20之间的数值
cn.netkiller.blog.2=${random.int[10,20]}	
		
		</pre><section class="section" id="id784"><div class="titlepage"><div><div><h4 class="title">随机数</h4></div></div></div><pre class="screen">
		
	
		
			</pre><pre class="programlisting">
		

import lombok.extern.slf4j.Slf4j;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.env.RandomValuePropertySource;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import java.util.List;


@Slf4j
@RunWith(SpringJUnit4ClassRunner.class)
@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.NONE)
public class RandomValuePropertySourceTest {
    @Test
    public void testRandomValuePropertySource() {
        // 自定义的一个随机值属性源,起名叫做 myRandom
        RandomValuePropertySource random = new RandomValuePropertySource("myRandom");
        // 随机生成一个整数
        log.info("random int:{}", random.getProperty("random.int"));

        // 随机生成一个整数，指定上边界，不大于等于1
        log.info("random int(1):{}", random.getProperty("random.int(1)"));
        // 随机生成一个整数，指定上边界，不大于等于5
        log.info("random int(5):{}", random.getProperty("random.int(5)"));

        // 随机生成一个整数，使用区间[0,1),前闭后开=&gt;只能是1
        // 注意区间的表示法：使用()包围,2个字符
        log.info("random int(0,1):{}", random.getProperty("random.int(0,1)"));
        // 随机生成一个整数，使用区间[1,3),前闭后开=&gt;只能是1或者2
        // 注意区间的表示法：使用空格包围,2个字符，前后各一个空格
        log.info("random int(1,3):{}", random.getProperty("random.int 1,3 "));
        // 随机生成一个整数，使用区间[3,4),前闭后开=&gt;只能是3
        // 注意区间的表示法：使用汉字包围,2个字符，前后各一个汉字自负
        log.info("random int(3,4):{}", random.getProperty("random.int底3,4顶"));
        // 随机生成一个整数，使用区间[5,6),前闭后开=&gt;只能是5
        // 注意区间的表示法：使用英文字母包围,2个字符，前后各一个英文字母
        log.info("random int(5,6):{}", random.getProperty("random.intL5,6U"));
        // 随机生成一个整数，使用区间[5,6),前闭后开=&gt;只能是5
        // 注意区间的表示法：使用数字包围,2个字符，前一个数字5，后一个数字6
        log.info("random int(5,6):{}", random.getProperty("random.int55,66"));

        // 随机生成一个长整数
        log.info("random long:{}", random.getProperty("random.long"));
        // 随机生成一个整数，使用区间[100,101),前闭后开=&gt;只能是100
        log.info("random long(100,101):{}", random.getProperty("random.long(100,101)"));

        // 随机生成一个 uuid
        log.info("random uuid:{}", random.getProperty("random.uuid"));
    }
}		
		
			</pre></section></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="ch05s09.xhtml">上一页</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="ch05.xhtml">上一级</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="ch05s11.xhtml">下一页</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">默认值 </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../../index.xhtml">起始页</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> 多行字符串</td></tr></table></div></footer></body></html>