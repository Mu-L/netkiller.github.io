<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Properties 文件</title><link rel="stylesheet" type="text/css" href="../../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="ch05.xhtml" title="第 5 章 Properties 配置文件"/><link rel="next" href="ch05s03.xhtml" title="Environment 读取配置文件"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">Properties 文件</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="ch05.xhtml">上一页</a> </td><th style="width: 60%; text-align: center; ">第 5 章 Properties 配置文件</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="ch05s03.xhtml">下一页</a></td></tr></table><hr/></div></header><section class="section" id="properties"><div class="titlepage"><div><div><h3 class="title">Properties 文件</h3></div></div></div><section class="section" id="@Value"><div class="titlepage"><div><div><h4 class="title">@Value 注解</h4></div></div></div><p>application.properties</p><pre class="screen">
			
server.name=Linux
server.host=192.168.0.1,172.16.0.1			
			
			</pre><pre class="screen">
			
	@Value("${server.name}")
	private String name;
 			
			</pre></section><section class="section" id="ConfigurationProperties"><div class="titlepage"><div><div><h4 class="title">@EnableConfigurationProperties 引用自定义 *.properties 配置文件</h4></div></div></div><p>Application.java 配置NetkillerProperties.java是 @ComponentScan 扫描范围，可以不用声明下面注解。</p><pre class="screen">
			
@EnableConfigurationProperties(NetkillerProperties.class)	
			
			</pre><pre class="programlisting">
			
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
import org.springframework.boot.context.properties.EnableConfigurationProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.authentication.UserCredentials;
import org.springframework.data.mongodb.MongoDbFactory;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.data.mongodb.core.SimpleMongoDbFactory;
import org.springframework.data.mongodb.repository.config.EnableMongoRepositories;

import com.mongodb.Mongo;

import pojo.NetkillerProperties;

@Configuration
@SpringBootApplication
@EnableConfigurationProperties(NetkillerProperties.class)
@EnableAutoConfiguration(exclude = { DataSourceAutoConfiguration.class })
@ComponentScan({ "web", "rest" })
@EnableMongoRepositories
public class Application {
	
	@SuppressWarnings("deprecation")
	public @Bean MongoDbFactory mongoDbFactory() throws Exception {
		UserCredentials userCredentials = new UserCredentials("finance", "your_password");
		return new SimpleMongoDbFactory(new Mongo("mdb.netkiller.cn"), "finance", userCredentials);
	}

	public @Bean MongoTemplate mongoTemplate() throws Exception {
		return new MongoTemplate(mongoDbFactory());
	}

	public static void main(String[] args) {
		SpringApplication.run(Application.class, args);
	}

}
			
			</pre><p>NetkillerProperties.java</p><pre class="programlisting">
			
package pojo;

import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Configuration;

@ConfigurationProperties(prefix="netkiller")
public class NetkillerProperties {
	private String name;
	private String email;
	private String home;
	
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	public String getHome() {
		return home;
	}
	public void setHome(String home) {
		this.home = home;
	}
	@Override
	public String toString() {
		return "NetkillerProperties [name=" + name + ", email=" + email + ", home=" + home + "]";
	}
}
			
			</pre><p>IndexController.java</p><pre class="programlisting">
			
package web;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import domain.City;
import pojo.NetkillerProperties;
import repository.CityRepository;

@Controller
public class IndexController {
	
	@Autowired
	private CityRepository repository;

	@Autowired
	private NetkillerProperties propertie;
	
	@RequestMapping("/index")
	@ResponseBody
	public String index() {
	//public ModelAndView index() {

		String message = "Hello";
		//return new ModelAndView("home/welcome", "variable", message);
		return message;
	}
	
	@RequestMapping("/config")
	@ResponseBody
	public String config() {
		return propertie.toString();
	}
}
			
			</pre><p>src/main/resource/application.properties</p><pre class="programlisting">
			
netkiller.name=Neo
netkiller.email=netkiller@msn.com
netkiller.home=http://www.netkiller.cn
			
			</pre><p>@ConfigurationProperties 默认配置是 application.properties</p><p>你可以通过 locations 指向特定配置文件</p><pre class="screen">
				@ConfigurationProperties(prefix = "message.api",locations = "classpath:config/message.properties")
			</pre><p>@EnableConfigurationProperties 可以导入多个配置文件</p><pre class="screen">
			
@EnableConfigurationProperties({NetkillerProperties.class, NeoProperties.class})
			
			</pre><p/><pre class="screen">
			
@PropertySource(value = "classpath:netkiller.properties", encoding = "UTF-8", ignoreResourceNotFound = true) 			
			
			</pre></section><section class="section" id="@PropertySource"><div class="titlepage"><div><div><h4 class="title">@PropertySource 注解载入 properties 文件</h4></div></div></div><pre class="programlisting">
			
@PropertySource("classpath:/config.properties}")	

忽略FileNotFoundException，当配置文件不存在系统抛出FileNotFoundException并终止程序运行，ignoreResourceNotFound=true 会跳过使程序能够正常运行
@PropertySource(value="classpath:config.properties", ignoreResourceNotFound=true)		

			
			</pre><p>载入多个配置文件</p><pre class="programlisting">
			
@PropertySources({  
        @PropertySource("classpath:config.properties"),  
        @PropertySource("classpath:db.properties")  
})
			
			</pre><p>test.properties</p><pre class="programlisting">
			
name=Neo
age=30			
			
			</pre><pre class="programlisting">
			
package cn.netkiller.web;

import java.util.Date;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.PropertySource;
import org.springframework.core.env.Environment;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
@PropertySource("classpath:test.properties")
public class TestController {
	
	@Autowired
	Environment environment;
	
	@Value("${age}")
	private String age;

	public TestController() {
		// TODO Auto-generated constructor stub
	}
	
	// 环境变量方式
	@RequestMapping("/test/env")
	@ResponseBody
	public String env() {
		String message = environment.getProperty("name");
		return message;
	}
	
	@RequestMapping("/test/age")
	@ResponseBody
	public String age() {
		String message = age;
		return message;
	}

}
			
			</pre></section></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="ch05.xhtml">上一页</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="ch05.xhtml">上一级</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="ch05s03.xhtml">下一页</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">第 5 章 Properties 配置文件 </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../../index.xhtml">起始页</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> Environment 读取配置文件</td></tr></table></div></footer></body></html>