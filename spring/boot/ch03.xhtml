<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>第 3 章 SpringApplication</title><link rel="stylesheet" type="text/css" href="../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="ch02s04.xhtml" title="Spring Initializr - Bootstrap your application"/><link rel="next" href="ch03s02.xhtml" title="@SpringBootApplication"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">第 3 章 SpringApplication</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="ch02s04.xhtml">上一页</a> </td><th style="width: 60%; text-align: center; ">部分 I. Spring Boot</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="ch03s02.xhtml">下一页</a></td></tr></table><hr/></div></header><section class="chapter" id="SpringApplication"><div class="titlepage"><div><div><h2 class="title">第 3 章 SpringApplication</h2></div></div></div><div class="toc"><div class="toc-title">目录</div><ul class="toc"><li><span class="section"><a href="ch03.xhtml#spring.run">运行 Spring boot 项目</a></span><ul><li><span class="section"><a href="ch03.xhtml#id776">Linux systemd</a></span></li><li><span class="section"><a href="ch03.xhtml#id777">传统 init.d 脚本</a></span></li><li><span class="section"><a href="ch03.xhtml#war">编译用于Tomcat的 War</a></span></li></ul></li><li><span class="section"><a href="ch03s02.xhtml">@SpringBootApplication</a></span><ul><li><span class="section"><a href="ch03s02.xhtml#id778">排除 @EnableAutoConfiguration 加载项</a></span></li></ul></li><li><span class="section"><a href="ch03s03.xhtml">获取 Resources 目录中的静态文件</a></span></li><li><span class="section"><a href="ch03s04.xhtml">@EnableAutoConfiguration</a></span></li><li><span class="section"><a href="ch03s05.xhtml">@ComponentScan</a></span></li><li><span class="section"><a href="ch03s06.xhtml">@EntityScan 实体扫描</a></span></li><li><span class="section"><a href="ch03s07.xhtml">@EnableJpaRepositories</a></span></li><li><span class="section"><a href="ch03s08.xhtml">启动和销毁</a></span></li><li><span class="section"><a href="ch03s09.xhtml">打印环境变量</a></span></li><li><span class="section"><a href="ch03s10.xhtml">CharacterEncodingFilter</a></span></li><li><span class="section"><a href="ch03s11.xhtml">隐藏 Banner</a></span></li><li><span class="section"><a href="ch03s12.xhtml">实体与仓库扫描</a></span></li><li><span class="section"><a href="ch03s13.xhtml">列出 Beans</a></span></li><li><span class="section"><a href="ch03s14.xhtml">Tomcat 端口</a></span></li><li><span class="section"><a href="ch03s15.xhtml">配置项设定</a></span></li><li><span class="section"><a href="ch03s16.xhtml">spring.profiles.active</a></span></li><li><span class="section"><a href="ch03s17.xhtml">@Profile("dev") / @ActiveProfiles("dev")</a></span></li><li><span class="section"><a href="ch03s18.xhtml">设置默认时区</a></span></li></ul></div><pre class="programlisting">
		

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
import org.springframework.context.annotation.ComponentScan;

@SpringBootApplication
@EnableAutoConfiguration(exclude={DataSourceAutoConfiguration.class})
@ComponentScan({"cn.netkiller.controller"})
public class Application {
    public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    }

}
		
	</pre><section class="section" id="spring.run"><div class="titlepage"><div><div><h3 class="title">运行 Spring boot 项目</h3></div></div></div><section class="section" id="id776"><div class="titlepage"><div><div><h4 class="title">Linux systemd</h4></div></div></div><p>/etc/systemd/system/spring.service</p><pre class="screen">
			
####################################################
# Homepage: http://netkiller.github.io
# Author: netkiller&lt;netkiller@msn.com&gt;
# Script: https://github.com/oscm/shell
# Date: 2015-11-03
####################################################
[Unit]
Description=Spring Boot Application
After=network.target

[Service]
User=www
Group=www
Type=oneshot
WorkingDirectory=/www/netkiller.cn/api.netkiller.cn
ExecStart=/usr/bin/java -jar your_jar_file.jar --spring.config.location=appliction-production.properties --spring.profiles.active=profile
#ExecStop=pkill -9 -f  
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
			
			</pre></section><section class="section" id="id777"><div class="titlepage"><div><div><h4 class="title">传统 init.d 脚本</h4></div></div></div><pre class="screen">
			
#!/bin/bash
##############################################
# Author: netkiller&lt;netkiller@msn.com&gt;
# Homepage: http://www.netkiller.cn
# Date: 2017-02-08
# $Author$
# $Id$
##############################################
# chkconfig: 345 100 02
# description: Spring boot application
# processname: springbootd
# File : springbootd
##############################################
BASEDIR="/www/netkiller.cn/api.netkiller.cn"
JAVA_HOME=/srv/java
JAVA_OPTS="-server -Xms2048m -Xmx8192m -Djava.security.egd=file:/dev/./urandom"
PACKAGE="api.netkiller.cn-0.0.2-release.jar"
CONFIG="--spring.config.location=$BASEDIR/application.properties"
USER=www
##############################################
NAME=springbootd
PROG="$JAVA_HOME/bin/java $JAVA_OPTS -jar $BASEDIR/$PACKAGE $CONFIG"
LOGFILE=/var/tmp/$NAME.log
PIDFILE=/var/tmp/$NAME.pid
ACCESS_LOG=/var/tmp/$NAME.access.log
##############################################

function log(){
	echo "$(date -d "today" +"%Y-%m-%d %H:%M:%S") $1	$2" &gt;&gt; $LOGFILE
}

function start(){
	if [ -f "$PIDFILE" ]; then
		echo $PIDFILE
		exit 2
	fi

	su - $USER -c "$PROG &amp; echo \$! &gt; $PIDFILE"
	log info start
}
function stop(){
	[ -f $PIDFILE ] &amp;&amp; kill `cat $PIDFILE` &amp;&amp; rm -rf $PIDFILE
	log info stop
}
function status(){
	ps aux | grep $PACKAGE | grep -v grep | grep -v status
	log info status
}
function reset(){
	pkill -f $PACKAGE
  	[ -f $PIDFILE ] &amp;&amp; rm -rf $PIDFILE
	log info reset
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	status)
		status
		;;
	restart)
		stop
		start
		;;
	log)
		tail -f $LOGFILE
		;;
	reset)
		reset
		;;
	*)
		echo $"Usage: $0 {start|stop|status|restart|log|reset}"
esac
exit $?

			
			</pre></section><section class="section" id="war"><div class="titlepage"><div><div><h4 class="title">编译用于Tomcat的 War</h4></div></div></div><pre class="programlisting">
			
package demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.boot.builder.SpringApplicationBuilder;
import org.springframework.boot.context.web.SpringBootServletInitializer;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@Configuration
@ComponentScan
@EnableAutoConfiguration
public class Application extends SpringBootServletInitializer {

    private static Class&lt;Application&gt; applicationClass = Application.class;
    
    public static void main(String[] args) {
        SpringApplication.run(applicationClass, args);
    }

    @Override
    protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {
        return application.sources(applicationClass);
    }
}		
			
			</pre></section></section></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="ch02s04.xhtml">上一页</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="pt01.xhtml">上一级</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="ch03s02.xhtml">下一页</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">Spring Initializr - Bootstrap your application </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../index.xhtml">起始页</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> @SpringBootApplication</td></tr></table></div></footer></body></html>