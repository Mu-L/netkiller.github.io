<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Springboot 接入阿里云</title><link rel="stylesheet" type="text/css" href="../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="record/ch39s05.xhtml" title="Record 作为 Controller"/><link rel="next" href="../framework/pt02.xhtml" title="部分 II. Spring Framework"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">Springboot 接入阿里云</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="record/ch39s05.xhtml">上一页</a> </td><th style="width: 60%; text-align: center; ">部分 I. Spring Boot</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="../framework/pt02.xhtml">下一页</a></td></tr></table><hr/></div></header><section class="section" id="springboot.aliyun"><div class="titlepage"><div><div><h2 class="title" style="clear: both">Springboot 接入阿里云</h2></div></div></div><section class="section" id="springboot.oss"><div class="titlepage"><div><div><h3 class="title">阿里云 OSS - STS进行临时授权访问获取 HTTPS 地址</h3></div></div></div><p>默认获取URL是 HTTP，我们的需求是需要获取HTTPS地址，当然你可以使用字符串替换操作，将 http 替换成
			https，但这并不是最有解决方案。</p><pre class="programlisting">
		
package cn.netkiller.aliyun;

import java.net.URL;
import java.util.Date;

import com.aliyun.oss.ClientBuilderConfiguration;
import com.aliyun.oss.OSS;
import com.aliyun.oss.OSSClientBuilder;
import com.aliyun.oss.common.comm.Protocol;

public class App {
	public static void main(String[] args) {
		System.out.println("Hello World!");

		// yourEndpoint填写Bucket所在地域对应的Endpoint。以华东1（杭州）为例，Endpoint填写为https://oss-cn-hangzhou.aliyuncs.com。
		String endpoint = "oss-cn-shanghai.aliyuncs.com";
		// 从STS服务获取的临时访问密钥（AccessKey ID和AccessKey Secret）。
		String accessKeyId = "DYmJeLTAI5tm1ZaCEB9nUxAP";
		String accessKeySecret = "QkXusBiLMoMIsW3JJhG0D5NOFBEh5a";
		// 从STS服务获取的安全令牌（SecurityToken）。
		String securityToken = "yourSecurityToken";
		// 填写Bucket名称，例如examplebucket。
		String bucketName = "production";
		// 填写Object完整路径，例如exampleobject.txt。Object完整路径中不能包含Bucket名称。
		String objectName = "exampleobject.txt";

		ClientBuilderConfiguration clientBuilderConfiguration = new ClientBuilderConfiguration();
		clientBuilderConfiguration.setProtocol(Protocol.HTTPS);
		// 创建OSSClient实例。
		OSS ossClient = new OSSClientBuilder().build(endpoint, accessKeyId, accessKeySecret, securityToken, clientBuilderConfiguration);
		// 设置签名URL过期时间为3600秒（1小时）。
		Date expiration = new Date(new Date().getTime() + 3600 * 1000);
		// 生成以GET方法访问的签名URL，访客可以直接通过浏览器访问相关内容。
		URL url = ossClient.generatePresignedUrl(bucketName, objectName, expiration);
		System.out.println(url);
		System.out.println(url.toString().replace(bucketName + "." + endpoint, "oss.netkiller.cn"));
		// 关闭OSSClient。
		ossClient.shutdown();
	}
}
		
		</pre></section></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="record/ch39s05.xhtml">上一页</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="pt01.xhtml">上一级</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="../framework/pt02.xhtml">下一页</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">Record 作为 Controller </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../index.xhtml">起始页</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> 部分 II. Spring Framework</td></tr></table></div></footer></body></html>