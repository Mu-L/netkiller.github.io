<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Spring boot with Docker stack</title><link rel="stylesheet" type="text/css" href="../../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="ch24.xhtml" title="第 24 章 Spring boot with Container"/><link rel="next" href="ch24s03.xhtml" title="Spring boot with Kubernetes"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">Spring boot with Docker stack</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="ch24.xhtml">上一页</a> </td><th style="width: 60%; text-align: center; ">第 24 章 Spring boot with Container</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="ch24s03.xhtml">下一页</a></td></tr></table><hr/></div></header><section class="section" id="spring-boot.docker-stack"><div class="titlepage"><div><div><h3 class="title">Spring boot with Docker stack</h3></div></div></div><section class="section" id="id872"><div class="titlepage"><div><div><h4 class="title">编译 Docker 镜像</h4></div></div></div><pre class="screen">
		
iMac:config neo$ mvn docker:build
[INFO] Scanning for projects...
[INFO] 
[INFO] ------------------------&lt; cn.netkiller:config &gt;-------------------------
[INFO] Building config 0.0.1-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- docker-maven-plugin:1.2.2:build (default-cli) @ config ---
[INFO] Using authentication suppliers: [ConfigFileRegistryAuthSupplier, FixedRegistryAuthSupplier]
[INFO] Copying /Users/neo/workspace/Microservice/config/target/config-0.0.1-SNAPSHOT.jar -&gt; /Users/neo/workspace/Microservice/config/target/docker/srv/config-0.0.1-SNAPSHOT.jar
[INFO] Building image netkiller/config
Step 1/7 : FROM openjdk

 ---&gt; b2324c52d969
Step 2/7 : WORKDIR /srv

 ---&gt; Using cache
 ---&gt; f7c1730935c6
Step 3/7 : ADD /srv/config-0.0.1-SNAPSHOT.jar /srv/

 ---&gt; Using cache
 ---&gt; 8b5a053550ba
Step 4/7 : EXPOSE 8888

 ---&gt; Running in 7f4e35b3564f
Removing intermediate container 7f4e35b3564f
 ---&gt; a968ea58ba64
Step 5/7 : ENTRYPOINT ["java", "-jar", "-Djava.security.egd=file:/dev/./urandom", "/srv/config-0.0.1-SNAPSHOT.jar"]

 ---&gt; Running in 6b110b5d16b7
Removing intermediate container 6b110b5d16b7
 ---&gt; a8ab10c1c186
Step 6/7 : CMD ["java", "-version"]

 ---&gt; Running in 4f2dc6e08404
Removing intermediate container 4f2dc6e08404
 ---&gt; a74bbf7b6c30
Step 7/7 : VOLUME /tmp

 ---&gt; Running in 0a3836ea768f
Removing intermediate container 0a3836ea768f
 ---&gt; 5e13d81a9dea
ProgressMessage{id=null, status=null, stream=null, error=null, progress=null, progressDetail=null}
Successfully built 5e13d81a9dea
Successfully tagged netkiller/config:latest
[INFO] Built netkiller/config
[INFO] Tagging netkiller/config with 0.0.1-SNAPSHOT
[INFO] Tagging netkiller/config with latest
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  20.516 s
[INFO] Finished at: 2020-09-20T21:49:28+08:00
[INFO] ------------------------------------------------------------------------		
		
			</pre></section><section class="section" id="id873"><div class="titlepage"><div><div><h4 class="title"/></div></div></div><p>初始化 Swarm</p><pre class="screen">
		
iMac:springboot neo$ docker swarm init
Swarm initialized: current node (qvqez97c8ja014ktmroy9sw47) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-49w6mcdjvj9nhb1go4wiazygupvj6qmjy7mgdb7x5bzqspldss-6yfvnij63it1qbs2nwvqw6xv0 192.168.65.3:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.		
		
			</pre><p>创建 docker-compose.yml 文件</p><pre class="screen">
		
version: '3.8'

services:
  config:
    image: netkiller/config:latest
    ports:
      - "8888"
    volumes:
      - /tmp/config:/tmp
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "0.1"
          memory: 50M		
		
			</pre><p>部署服务</p><pre class="screen">
		
iMac:springboot neo$ docker stack deploy -c docker-compose.yml springboot
Creating network springboot_default
Creating service springboot_config		
		
			</pre><p>查看部署情况</p><pre class="screen">
		
iMac:springboot neo$ docker stack ls
NAME                SERVICES            ORCHESTRATOR
springboot          1                   Swarm
iMac:springboot neo$ docker stack services springboot
ID                  NAME                MODE                REPLICAS            IMAGE                     PORTS
viavpkzk6lvo        springboot_config   replicated          0/1                 netkiller/config:latest   *:30001-&gt;8888/tcp
		
		
			</pre><p>查看服务运行状态</p><pre class="screen">
		
iMac:springboot neo$ docker stack ps springboot
ID                  NAME                  IMAGE                     NODE                DESIRED STATE       CURRENT STATE             ERROR               PORTS
mr30ujsdbti4        springboot_config.1   netkiller/config:latest   docker-desktop      Running             Preparing 4 minutes ago                       		
		
			</pre></section></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="ch24.xhtml">上一页</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="ch24.xhtml">上一级</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="ch24s03.xhtml">下一页</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">第 24 章 Spring boot with Container </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../../index.xhtml">起始页</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> Spring boot with Kubernetes</td></tr></table></div></footer></body></html>