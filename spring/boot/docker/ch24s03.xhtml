<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Spring boot with Kubernetes</title><link rel="stylesheet" type="text/css" href="../../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="ch24s02.xhtml" title="Spring boot with Docker stack"/><link rel="next" href="../ch25.xhtml" title="第 25 章 Spring boot with command line"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">Spring boot with Kubernetes</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="ch24s02.xhtml">上一页</a> </td><th style="width: 60%; text-align: center; ">第 24 章 Spring boot with Container</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="../ch25.xhtml">下一页</a></td></tr></table><hr/></div></header><section class="section" id="springboot.kubernetes"><div class="titlepage"><div><div><h3 class="title">Spring boot with Kubernetes</h3></div></div></div><p>
			首先你需要构建 docker 镜像，并且 push 到 registry
			<a class="link" href="ch24.xhtml#springboot.docker" title="Spring boot with Docker">参考这里</a>
		</p><section class="section" id="id874"><div class="titlepage"><div><div><h4 class="title">Kubernetes 编排脚本</h4></div></div></div><p>创建密钥</p><pre class="screen">
		
kubectl create secret docker-registry docker-hub \
--docker-server=https://index.docker.io/v1/ \
--docker-username=netkiller \
--docker-password=passw0rd \
--docker-email=netkiller@msn.com
		
			</pre><p>查看是否创建成功</p><pre class="screen">
		
iMac:spring neo$ kubectl get secret
NAME                  TYPE                                  DATA   AGE
default-token-fhfn8   kubernetes.io/service-account-token   3      2d23h
docker-hub            kubernetes.io/dockerconfigjson        1      15s		
		
			</pre><p>springboot.yml 编排脚本</p><pre class="screen">
		
apiVersion: v1
kind: Service
metadata:
  name: springboot
  namespace: default
  labels:
    app: springboot
spec:
  type: NodePort
  ports:
  - port: 8888
    nodePort: 30000
  selector:
    app: springboot
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot
spec:
  replicas: 3
  selector:
    matchLabels:
      app: springboot
  template:
    metadata:
      labels:
        app: springboot
    spec:
      containers:
      - name: springboot
        image: netkiller/config:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8888
      imagePullSecrets:
        - name: docker-hub
		
			</pre></section><section class="section" id="id875"><div class="titlepage"><div><div><h4 class="title">部署镜像</h4></div></div></div><pre class="screen">
		
iMac:spring neo$ kubectl create -f springboot.yml 
deployment.apps/springboot created

iMac:spring neo$ kubectl expose deployment springboot --type="LoadBalancer"
service/springboot exposed

iMac:spring neo$ minikube service list
|----------------------|---------------------------|--------------|---------------------------|
|      NAMESPACE       |           NAME            | TARGET PORT  |            URL            |
|----------------------|---------------------------|--------------|---------------------------|
| default              | kubernetes                | No node port |
| default              | springboot                |         8888 | http://192.168.64.2:30000 |
| kube-system          | kube-dns                  | No node port |
| kube-system          | registry                  | No node port |
| kubernetes-dashboard | dashboard-metrics-scraper | No node port |
| kubernetes-dashboard | kubernetes-dashboard      | No node port |
|----------------------|---------------------------|--------------|---------------------------|

iMac:spring neo$ minikube service springboot --url
http://192.168.64.2:30000
		
			</pre><p>http://192.168.64.2:30000 是访问地址，Kubernetes 会负载均衡到后面的三个 pod 上。</p><pre class="screen">
		
iMac:config neo$ curl -k https://config:s3cr3t@192.168.64.2:30000/netkiller-dev.json
{"sms":{"gateway":{"url":"https://sms.netkiller.cn/v1","username":"netkiller","password":"123456"}}}		
		
			</pre><p>删除服务</p><pre class="screen">
		
iMac:spring neo$ kubectl delete -f springboot.yml 
service "springboot" deleted
deployment.apps "springboot" deleted		
		
			</pre></section></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="ch24s02.xhtml">上一页</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="ch24.xhtml">上一级</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="../ch25.xhtml">下一页</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">Spring boot with Docker stack </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../../index.xhtml">起始页</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> 第 25 章 Spring boot with command line</td></tr></table></div></footer></body></html>