<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>第 37 章 Spring boot with Async</title><link rel="stylesheet" type="text/css" href="../../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="../hessian/ch36s05.xhtml" title="RestController"/><link rel="next" href="ch37s02.xhtml" title="WebAsyncTask 实现异步"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">第 37 章 Spring boot with Async</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="../hessian/ch36s05.xhtml">上一页</a> </td><th style="width: 60%; text-align: center; ">部分 I. Spring Boot</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="ch37s02.xhtml">下一页</a></td></tr></table><hr/></div></header><section class="chapter" id="index"><div class="titlepage"><div><div><h2 class="title">第 37 章 Spring boot with Async</h2></div></div></div><div class="toc"><div class="toc-title">目录</div><ul class="toc"><li><span class="section"><a href="ch37.xhtml#Callable">Callable 实现异步</a></span></li><li><span class="section"><a href="ch37s02.xhtml">WebAsyncTask 实现异步</a></span></li><li><span class="section"><a href="ch37s03.xhtml">DeferredResult 实现异步返回结果</a></span></li><li><span class="section"><a href="ch37s04.xhtml">默认简单线程池 SimpleAsyncTaskExecutor</a></span><ul><li><span class="section"><a href="ch37s04.xhtml#id921">配置线程池</a></span></li><li><span class="section"><a href="ch37s04.xhtml#id922">@Service/@Component 中异步执行</a></span></li><li><span class="section"><a href="ch37s04.xhtml#id923">applicationTaskExecutor</a></span></li></ul></li><li><span class="section"><a href="ch37s05.xhtml">ThreadPoolTaskExecutor 自定义线程池</a></span><ul><li><span class="section"><a href="ch37s05.xhtml#简单异步执行">最简单的配置</a></span></li><li><span class="section"><a href="ch37s05.xhtml#id924">队列</a></span></li><li><span class="section"><a href="ch37s05.xhtml#id925">定义多个线程池</a></span></li><li><span class="section"><a href="ch37s05.xhtml#id926">实现 AsyncConfigurer 接口方式创建自定义连接池</a></span></li><li><span class="section"><a href="ch37s05.xhtml#id927">继承 AsyncConfigurerSupport 创建自定义连接池 </a></span></li><li><span class="section"><a href="ch37s05.xhtml#id928">生产环境完整代码 @Bean 注入方式</a></span></li><li><span class="section"><a href="ch37s05.xhtml#id929">通过 @Bean 覆盖掉 SimpleAsyncTaskExecutor</a></span></li></ul></li><li><span class="section"><a href="ch37s06.xhtml">自定义线程池 ThreadPoolExecutor</a></span><ul><li><span class="section"><a href="ch37s06.xhtml#id930">ThreadPoolExecutor</a></span></li><li><span class="section"><a href="ch37s06.xhtml#id931">注入自定义线程池bean</a></span></li></ul></li><li><span class="section"><a href="ch37s07.xhtml">设置线程名称</a></span></li><li><span class="section"><a href="ch37s08.xhtml">线程池监控</a></span></li><li><span class="section"><a href="ch37s09.xhtml">注意事项</a></span></li></ul></div><section class="section" id="Callable"><div class="titlepage"><div><div><h3 class="title">Callable 实现异步</h3></div></div></div><pre class="programlisting">
		
@GetMapping("/email")
public Callable&lt;String&gt; order() {
    System.out.println("主线程开始：" + Thread.currentThread().getName());
    Callable&lt;String&gt; result = () -&gt; {
        System.out.println("副线程开始：" + Thread.currentThread().getName());
        Thread.sleep(1000);
        System.out.println("副线程返回：" + Thread.currentThread().getName());
        return "success";
    };

    System.out.println("主线程返回：" + Thread.currentThread().getName());
    return result;
}		
		
		</pre></section></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="../hessian/ch36s05.xhtml">上一页</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="../pt01.xhtml">上一级</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="ch37s02.xhtml">下一页</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">RestController </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../../index.xhtml">起始页</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> WebAsyncTask 实现异步</td></tr></table></div></footer></body></html>