<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>DeferredResult 实现异步返回结果</title><link rel="stylesheet" type="text/css" href="../../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="ch37s02.xhtml" title="WebAsyncTask 实现异步"/><link rel="next" href="ch37s04.xhtml" title="默认简单线程池 SimpleAsyncTaskExecutor"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">DeferredResult 实现异步返回结果</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="ch37s02.xhtml">上一页</a> </td><th style="width: 60%; text-align: center; ">第 37 章 Spring boot with Async</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="ch37s04.xhtml">下一页</a></td></tr></table><hr/></div></header><section class="section" id="DeferredResult"><div class="titlepage"><div><div><h3 class="title">DeferredResult 实现异步返回结果</h3></div></div></div><pre class="programlisting">
		
	private DeferredResult&lt;String&gt; deferredResult = new DeferredResult&lt;String&gt;();
		
	@ResponseBody
    @GetMapping("/receive")
    public DeferredResult&lt;String&gt; receive() throws Exception {
        return deferredResult;
    }

    @ResponseBody
    @GetMapping("/send")
    public void send() throws Exception {
        deferredResult.setResult("Helloworld!!!");
    }
		
		</pre><pre class="programlisting">
		
	private final List&lt;DeferredResult&lt;String&gt;&gt; deferredResultList = new ArrayList&lt;DeferredResult&lt;String&gt;&gt;();
	
    @ResponseBody
    @GetMapping("/receive")
    public DeferredResult&lt;String&gt; receive() throws Exception {
        DeferredResult&lt;String&gt; deferredResult = new DeferredResult&lt;&gt;();

        //先存起来，等待触发
        deferredResultList.add(deferredResult);
        return deferredResult;
    }

    @ResponseBody
    @GetMapping("/send")
    public void send() throws Exception {
        // 让所有hold住的请求给与响应
        deferredResultList.forEach(d -&gt; d.setResult("say hello to all"));
    }		
		
		</pre><p>DeferredResult 与 Callback 配合使用，用来获取 Callback 返回值</p><pre class="programlisting">
		
    @GetMapping("/tts")
    @Operation(summary = "音频合成")
    @ResponseBody
    public DeferredResult&lt;ResponseJson&gt; test(@RequestParam("text") String text, @RequestParam("filename") String filename) {
        DeferredResult&lt;ResponseJson&gt; deferredResult = new DeferredResult&lt;ResponseJson&gt;();
        speechSynthesizerService.tts(text, new XfyunCallback() {
            @Override
            public void onCallback(String sid, String text) {
                String audio = aliyunService.uploadMp3FromBase64(text, filename.concat(".mp3"));
                ResponseJson response = new ResponseJson(true, ResponseJson.Code.SUCCESS, "", audio);
                deferredResult.setResult(response);
            }
        });
        return deferredResult;
    }		
		
		</pre></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="ch37s02.xhtml">上一页</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="ch37.xhtml">上一级</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="ch37s04.xhtml">下一页</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">WebAsyncTask 实现异步 </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../../index.xhtml">起始页</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> 默认简单线程池 SimpleAsyncTaskExecutor</td></tr></table></div></footer></body></html>