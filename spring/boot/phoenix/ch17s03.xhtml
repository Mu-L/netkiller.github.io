<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Configuration</title><link rel="stylesheet" type="text/css" href="../../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="ch17s02.xhtml" title="application.properties"/><link rel="next" href="../datasource/ch18.xhtml" title="第 18 章 Spring boot with Datasource"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">Configuration</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="ch17s02.xhtml">上一页</a> </td><th style="width: 60%; text-align: center; ">第 17 章 Spring boot with Phoenix</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="../datasource/ch18.xhtml">下一页</a></td></tr></table><hr/></div></header><section class="section" id="id1538"><div class="titlepage"><div><div><h3 class="title">Configuration</h3></div></div></div><pre class="programlisting">
			
package cn.netkiller.api.config; 

@Configuration  
public class PhoenixDataSource {  
      
    @Autowired  
    private Environment env;  
  
    @Bean(name = "phoenixJdbcDataSource")  
    @Qualifier("phoenixJdbcDataSource")  
    public DataSource dataSource() {  
        DruidDataSource dataSource = new DruidDataSource();  
        dataSource.setUrl(env.getProperty("phoenix.url"));  
        dataSource.setDriverClassName(env.getProperty("phoenix.driver-class-name"));  
        dataSource.setUsername(env.getProperty("phoenix.username")); 
        dataSource.setPassword(env.getProperty("phoenix.password")); 
        dataSource.setDefaultAutoCommit(Boolean.valueOf(env.getProperty("phoenix.default-auto-commit")));  
        return dataSource;  
    }  
         
     @Bean(name = "phoenixJdbcTemplate")  
     public JdbcTemplate phoenixJdbcTemplate(@Qualifier("phoenixJdbcDataSource") DataSource dataSource) {  
          return new JdbcTemplate(dataSource);  
     }  
}
			
		</pre></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="ch17s02.xhtml">上一页</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="ch17.xhtml">上一级</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="../datasource/ch18.xhtml">下一页</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">application.properties </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../../index.xhtml">起始页</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> 第 18 章 Spring boot with Datasource</td></tr></table></div></footer></body></html>