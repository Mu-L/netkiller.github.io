<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>第 23 章 Spring boot with lombok</title><link rel="stylesheet" type="text/css" href="../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="swagger/ch22s07.xhtml" title="Spring boot with knife4j"/><link rel="next" href="ch23s02.xhtml" title="@Slf4j 注解"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">第 23 章 Spring boot with lombok</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="swagger/ch22s07.xhtml">上一页</a> </td><th style="width: 60%; text-align: center; ">部分 I. Spring Boot</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="ch23s02.xhtml">下一页</a></td></tr></table><hr/></div></header><section class="chapter" id="lombok"><div class="titlepage"><div><div><h2 class="title">第 23 章 Spring boot with lombok</h2></div></div></div><div class="toc"><div class="toc-title">目录</div><ul class="toc"><li><span class="section"><a href="ch23.xhtml#id858">@Builder</a></span></li><li><span class="section"><a href="ch23s02.xhtml">@Slf4j 注解</a></span></li></ul></div><pre class="screen">
		
		&lt;dependency&gt;
			&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;
			&lt;artifactId&gt;lombok&lt;/artifactId&gt;
			&lt;optional&gt;true&lt;/optional&gt;
		&lt;/dependency&gt;		
		
	</pre><p>常用的 lombok 注解:</p><pre class="programlisting">
		
@EqualsAndHashCode：实现equals()方法和hashCode()方法 @ToString：实现toString()方法 
@Data  ：注解在类上；提供类所有属性的 getting 和 setting 方法，此外还提供了equals、canEqual、hashCode、toString 方法 
@Setter：注解在属性上；为属性提供 setting 方法 
@Getter：注解在属性上；为属性提供 getting 方法 
@Log4j ：注解在类上；为类提供一个 属性名为log 的 log4j 日志对象 
@NoArgsConstructor：注解在类上；为类提供一个无参的构造方法 
@AllArgsConstructor：注解在类上；为类提供一个全参的构造方法 
@Cleanup：关闭流 @Synchronized：对象同步 @SneakyThrows：抛出异常
		
	</pre><section class="section" id="id858"><div class="titlepage"><div><div><h3 class="title">@Builder</h3></div></div></div><pre class="programlisting">
		
package cn.netkiller.graphql.domain;

import lombok.Builder;
import lombok.Data;

@Builder
@Data
public class Author {
	private Integer id;
	private String name;
	private Integer age;

	public Author() {
		// TODO Auto-generated constructor stub
	}

	@Override
	public String toString() {
		return "Author [id=" + id + ", name=" + name + ", age=" + age + "]";
	}

}
		
		
		</pre><pre class="programlisting">
		
Author author = Author.builder().id(1).name("Neo Chen").age(40).build();		
		
		</pre></section></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="swagger/ch22s07.xhtml">上一页</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="pt01.xhtml">上一级</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="ch23s02.xhtml">下一页</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">Spring boot with knife4j </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../index.xhtml">起始页</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> @Slf4j 注解</td></tr></table></div></footer></body></html>