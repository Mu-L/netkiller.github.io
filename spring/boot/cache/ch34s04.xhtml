<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>@CachePut 用法</title><link rel="stylesheet" type="text/css" href="../../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="ch34s03.xhtml" title="@Cacheable 的用法"/><link rel="next" href="ch34s05.xhtml" title="清空缓存"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">@CachePut 用法</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="ch34s03.xhtml">上一页</a> </td><th style="width: 60%; text-align: center; ">第 34 章 Spring boot with Caching</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="ch34s05.xhtml">下一页</a></td></tr></table><hr/></div></header><section class="section" id="@CachePut"><div class="titlepage"><div><div><h3 class="title">@CachePut 用法</h3></div></div></div><p>@CachePut 每次都会执行方法，都会将结果存入指定key的缓存中，@CachePut 不会判断是否 key
			已经存在，二是始终覆盖。
		</p><pre class="programlisting">
        
@CachePut("users")
public User find(Integer id) {

return null;

}
        
		</pre></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="ch34s03.xhtml">上一页</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="ch34.xhtml">上一级</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="ch34s05.xhtml">下一页</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">@Cacheable 的用法 </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../../index.xhtml">起始页</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> 清空缓存</td></tr></table></div></footer></body></html>