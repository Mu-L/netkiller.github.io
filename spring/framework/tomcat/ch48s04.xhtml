<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>集成 Mybatis</title><link rel="stylesheet" type="text/css" href="../../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="ch48s03.xhtml" title="Tomcat"/><link rel="next" href="../util/ch49.xhtml" title="第 49 章 Spring 工具集"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">集成 Mybatis</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="ch48s03.xhtml">上一页</a> </td><th style="width: 60%; text-align: center; ">第 48 章 Tomcat Spring 运行环境</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="../util/ch49.xhtml">下一页</a></td></tr></table><hr/></div></header><section class="section" id="mybatis"><div class="titlepage"><div><div><h2 class="title" style="clear: both">集成 Mybatis</h2></div></div></div><section class="section" id="id1073"><div class="titlepage"><div><div><h3 class="title">pom.xml</h3></div></div></div><pre class="programlisting">
			
 		&lt;dependency&gt;
			&lt;groupId&gt;org.mybatis&lt;/groupId&gt;
			&lt;artifactId&gt;mybatis&lt;/artifactId&gt;
			&lt;version&gt;3.3.0&lt;/version&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.mybatis&lt;/groupId&gt;
			&lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;
			&lt;version&gt;1.2.3&lt;/version&gt;
		&lt;/dependency&gt;
   			
			</pre></section><section class="section" id="id1074"><div class="titlepage"><div><div><h3 class="title">properties</h3></div></div></div><pre class="programlisting">
			
 	&lt;bean id="configuracion"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"&gt;
		&lt;property name="location" value="classpath:resources/development.properties" /&gt;
	&lt;/bean&gt;
   			
			</pre><pre class="programlisting">
			
jdbc.driverClassName=oracle.jdbc.driver.OracleDriver
jdbc.url=jdbc:oracle:thin:@192.168.4.9:1521:orcl
#jdbc.url=jdbc:mysql://127.0.0.1:3306/mybatis
jdbc.username=test
jdbc.password=123456
   			
			</pre><pre class="programlisting">
			
	&lt;bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"&gt;
		&lt;property name="driverClassName" value="${jdbc.driverClassName}" /&gt;
		&lt;property name="url" value="${jdbc.url}" /&gt;
		&lt;property name="username" value="${jdbc.username}" /&gt;
		&lt;property name="password" value="${jdbc.password}" /&gt;
	&lt;/bean&gt;			
			
			</pre></section><section class="section" id="id1075"><div class="titlepage"><div><div><h3 class="title">dataSource</h3></div></div></div><pre class="screen">
			
	&lt;bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"&gt;
		&lt;property name="driverClassName" value="${driver}" /&gt;
		&lt;property name="url" value="${url}" /&gt;
		&lt;property name="username" value="${username}" /&gt;
		&lt;property name="password" value="${password}" /&gt;
	&lt;/bean&gt;
			
			</pre></section><section class="section" id="id1076"><div class="titlepage"><div><div><h3 class="title">SqlSessionFactory</h3></div></div></div><p>创建SqlSessionFactory，需指定数据源，property名称必须为dataSource</p><pre class="programlisting">
			
	&lt;bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"&gt;
		&lt;property name="dataSource" ref="dataSource" /&gt;
	&lt;/bean&gt;
			
			</pre></section><section class="section" id="id1077"><div class="titlepage"><div><div><h3 class="title">Mapper 扫描</h3></div></div></div><p/><pre class="programlisting">
			
	&lt;bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"&gt;
		&lt;property name="basePackage" value="cn.netkiller.mappers" /&gt;
		&lt;property name="annotationClass" value="cn.netkiller.mappers.annotation.MybatisMapper"/&gt;
		&lt;property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/&gt;
	&lt;/bean&gt;
			
			</pre></section><section class="section" id="id1078"><div class="titlepage"><div><div><h3 class="title">Mapper 单一class映射</h3></div></div></div><p>创建数据映射器Mapper，属性mapperInterface的value必须为接口类</p><pre class="programlisting">
			
	&lt;bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"&gt;  
		&lt;property name="mapperInterface" value="com.mybatis.demo.UserMapper" /&gt;  
		&lt;property name="sqlSessionFactory" ref="sqlSessionFactory" /&gt;  
	&lt;/bean&gt;
			
			</pre></section><section class="section" id="id1079"><div class="titlepage"><div><div><h3 class="title">Service</h3></div></div></div><p/><pre class="programlisting">
			
	&lt;bean id="userService" class="cn.netkiller.service.UserService"&gt;
	&lt;/bean&gt;
			
			</pre></section><section class="section" id="id1080"><div class="titlepage"><div><div><h3 class="title">测试实例</h3></div></div></div><div class="example" id="id1465"><div class="example-title">例 48.1. MyBatis</div><div class="example-contents"><p>建立映射</p><pre class="programlisting">
				
package cn.netkiller.mapper;

import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Param;

import cn.netkiller.model.User;

public interface UserMapper {
	@Select("SELECT * FROM `user` WHERE id = #{id}")
	public User findById(@Param("id") int id); 
}
				
				</pre><p>建立模型</p><pre class="programlisting">
				
package cn.netkiller.model;

public class User {
	private String id;
	private String name;
	private int age;

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public int getAge() {
		return age;
	}

	public void setAge(int age) {
		this.age = age;
	}

	@Override
	public String toString() {
		return "User [id=" + id + ", name=" + name + ", age=" + age + "]";
	}
}

				
				</pre><p>建立 service</p><pre class="programlisting">
				
package cn.netkiller.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import cn.netkiller.mapper.UserMapper;
import cn.netkiller.model.User;

@Service
public class UserService {
	@Autowired
	private UserMapper userMapper;

	public UserMapper getUserMapper() {
		return userMapper;
	}

	public void setUserMapper(UserMapper userMapper) {
		this.userMapper = userMapper;
	}

	public User findById(int id) {
        return userMapper.findById(id);
    }
}
				
				
				</pre><p>建立控制器</p><pre class="programlisting">
				
package cn.netkiller.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.context.support.WebApplicationContextUtils;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.view.RedirectView;

import cn.netkiller.mapper.UserMapper;
import cn.netkiller.model.User;
import cn.netkiller.service.UserService;

@Controller
public class Index {

	@Autowired
	private UserMapper userMapper;
	
	@Autowired
    private UserService userService;
	
	
	@RequestMapping("/index")
	// @ResponseBody
	public ModelAndView index() {

		String message = "Hello";
		return new ModelAndView("index/index", "variable", message);
	}

	@RequestMapping("/user")
	public ModelAndView user() {
		
		User user = userService.findById(2);
		String message = user.toString();
		return new ModelAndView("index/index", "variable", message);
	}
	
	@RequestMapping("/member")
	public ModelAndView member() {
		User user = userMapper.findById(2);
		String message = user.toString();
		return new ModelAndView("index/index", "variable", message);
	}
}
				
				</pre></div></div><br class="example-break"/></section></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="ch48s03.xhtml">上一页</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="ch48.xhtml">上一级</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="../util/ch49.xhtml">下一页</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">Tomcat </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../../index.xhtml">起始页</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> 第 49 章 Spring 工具集</td></tr></table></div></footer></body></html>