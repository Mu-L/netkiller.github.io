<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>获取 EurekaClient 信息</title><link rel="stylesheet" type="text/css" href="../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="ch64s06.xhtml" title="ribbon"/><link rel="next" href="ch64s08.xhtml" title="Zuul"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">获取 EurekaClient 信息</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="ch64s06.xhtml">上一页</a> </td><th style="width: 60%; text-align: center; ">第 64 章 Spring Cloud Netflix</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="ch64s08.xhtml">下一页</a></td></tr></table><hr/></div></header><section class="section" id="id6575"><div class="titlepage"><div><div><h3 class="title">获取 EurekaClient 信息</h3></div></div></div><pre class="screen">
		
package cn.netkiller.sample;

import com.netflix.discovery.EurekaClient;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.netflix.eureka.EnableEurekaClient;
import org.springframework.context.annotation.Lazy;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import reactor.core.publisher.Mono;

@SpringBootApplication
@EnableEurekaClient
@RestController
public class WebFluxApplication {

    @Autowired
    @Lazy
    private EurekaClient eurekaClient;

    @Value("${spring.application.name}")
    private String appName;

    public static void main(String[] args) {
        SpringApplication.run(WebFluxApplication.class, args);
    }

    @GetMapping("/client")
    public Mono&lt;String&gt; greeting() {
        String idInEureka = eurekaClient.getApplication(appName).getInstances().get(0).getId();
        return Mono.just(String.format("Hello from '%s'!", idInEureka));
    }

    @GetMapping("/client2")
    public Mono&lt;String&gt; greetingWithParam(@RequestParam(value = "id") Long id) {
        String idInEureka = eurekaClient.getApplication(appName).getInstances().get(0).getId();
        return Mono.just(String.format("Hello with param from '%s'!", idInEureka));
    }
}
		
		</pre></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="ch64s06.xhtml">上一页</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="ch64.xhtml">上一级</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="ch64s08.xhtml">下一页</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">ribbon </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../index.xhtml">起始页</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> Zuul</td></tr></table></div></footer></body></html>