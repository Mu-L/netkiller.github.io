<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>第 69 章 Spring Cloud Alibaba</title><link rel="stylesheet" type="text/css" href="../../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="../ch68s02.xhtml" title="注册发现"/><link rel="next" href="ch69s02.xhtml" title="Kubernetes 部署微服务"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">第 69 章 Spring Cloud Alibaba</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="../ch68s02.xhtml">上一页</a> </td><th style="width: 60%; text-align: center; ">部分 V. Spring Cloud</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="ch69s02.xhtml">下一页</a></td></tr></table><hr/></div></header><section class="chapter" id="SpringCloudAlibaba"><div class="titlepage"><div><div><h2 class="title">第 69 章 Spring Cloud Alibaba</h2></div></div></div><div class="toc"><div class="toc-title">目录</div><ul class="toc"><li><span class="section"><a href="ch69.xhtml#id1422">安装 Nacos</a></span><ul><li><span class="section"><a href="ch69.xhtml#id1418">Docker 安装 Nacos</a></span></li><li><span class="section"><a href="ch69.xhtml#id1419">Kubernetes 安装 Nacos</a></span></li><li><span class="section"><a href="ch69.xhtml#id1420">IP限制，白名单</a></span></li><li><span class="section"><a href="ch69.xhtml#id1421">防火墙配置</a></span></li></ul></li><li><span class="section"><a href="ch69s02.xhtml">Kubernetes 部署微服务</a></span><ul><li><span class="section"><a href="ch69s02.xhtml#id1423">pom.xml 中加入 docker 插件</a></span></li><li><span class="section"><a href="ch69s02.xhtml#id1424">容器启动脚本</a></span></li><li><span class="section"><a href="ch69s02.xhtml#id1425">构建 docker 镜像</a></span></li><li><span class="section"><a href="ch69s02.xhtml#id1426">编排 kubernetes 容器</a></span></li><li><span class="section"><a href="ch69s02.xhtml#id1427">启动指定 nacos</a></span></li></ul></li><li><span class="section"><a href="ch69s03.xhtml">Nacos 配置中心/注册中心代码实例</a></span><ul><li><span class="section"><a href="ch69s03.xhtml#id1428">Maven</a></span></li><li><span class="section"><a href="ch69s03.xhtml#id1429">SpringBootApplication</a></span></li><li><span class="section"><a href="ch69s03.xhtml#id1430">ConfigController</a></span></li><li><span class="section"><a href="ch69s03.xhtml#id1431">配置文件</a></span></li></ul></li><li><span class="section"><a href="ch69s04.xhtml">FAQ</a></span><ul><li><span class="section"><a href="ch69s04.xhtml#id1432">禁用 Nacos</a></span></li><li><span class="section"><a href="ch69s04.xhtml#id1433">禁止注册</a></span></li><li><span class="section"><a href="ch69s04.xhtml#id1434">Failed to bind properties under 'server.tomcat.basedir' to java.io.File:</a></span></li><li><span class="section"><a href="ch69s04.xhtml#id1435">不读取 bootstrap.yaml 文件</a></span></li><li><span class="section"><a href="ch69s04.xhtml#id1436">WARN [com.alibaba.nacos.client.naming:177] [,] - out of date data received,
				old-t: 1665711914993, new-t: 1665711902390</a></span></li><li><span class="section"><a href="ch69s04.xhtml#id1437">User limit of inotify instances reached or too many open files</a></span></li><li><span class="section"><a href="ch69s04.xhtml#id1438">开启权限</a></span></li><li><span class="section"><a href="ch69s04.xhtml#id1439">ERROR Whitelabel</a></span></li><li><span class="section"><a href="ch69s04.xhtml#id1440"/></span></li></ul></li></ul></div><section class="section" id="id1422"><div class="titlepage"><div><div><h3 class="title">安装 Nacos</h3></div></div></div><section class="section" id="id1418"><div class="titlepage"><div><div><h4 class="title">Docker 安装 Nacos</h4></div></div></div><p>安装 netkiller-devops 库</p><pre class="screen">
		
pip install netkiller-devops		
		
			</pre><p>创建 docker.py 编排文件</p><pre class="screen">
		
#!/usr/bin/env python3
from netkiller.docker import *

volume = Volumes()
volume.create('mysql')

mysql = Services('mysql')
mysql.image('mysql:5.7').container_name('mysql').restart('always').hostname('db.netkiller.cn').env_file(os.getcwd()+'/nacos/env/mysql.env')
mysql.ports(['3306:3306']).volumes([
	'mysql:/var/lib/mysql'
]).command([
	'--socket=/var/lib/mysql/mysql.sock',
	'--default-authentication-plugin=mysql_native_password',
    '--character-set-server=utf8mb4',
    '--collation-server=utf8mb4_general_ci',
    '--explicit_defaults_for_timestamp=true',
    '--lower_case_table_names=1',
    '--max_execution_time=0'
])

nacos = Services('nacos')
nacos.container_name('nacos').env_file(os.getcwd()+'/nacos/env/nacos-mysql.env')
# .environment([
# 	'PREFER_HOST_MODE=hostname',
# 	'MODE=standalone'
# ])
nacos.image('nacos/nacos-server').volumes([
	'../nacos/logs/:/home/nacos/logs',
	'../nacos/init.d/custom.properties:/home/nacos/init.d/custom.properties'
]).ports([
	"8848:8848",
    "9848:9848",
	'9555:9555'
]).depends_on('mysql').restart('on-failure')

experiment = Composes('experiment')
experiment.version('3.9')
experiment.volumes(volume)
experiment.services(mysql)
experiment.services(nacos)

if __name__ == '__main__':
	try:
		docker = Docker()
		docker.sysctl([{'vm.max_map_count':'262144'}])
		docker.environment(experiment)
		docker.main()
	except KeyboardInterrupt:
		print ("Crtl+C Pressed. Shutting down.")
		
			</pre><p>查看帮助信息</p><pre class="screen">
		
[root@localhost ~]# python3 docker.py 
Python controls the docker manager.
Usage: docker.py [options] up|rm|start|stop|restart|logs|top|images|exec &lt;service&gt;

Options:
  -h, --help            show this help message and exit
  --debug               debug mode
  -e development|testing|production, --environment=development|testing|production
                        environment
  -d, --daemon          run as daemon
  --logfile=LOGFILE     logs file.
  -l, --list            print service of environment
  -f, --follow          following logging
  -c, --compose         show docker compose
  --export              export docker compose

Homepage: http://www.netkiller.cn	Author: Neo &lt;netkiller@msn.com&gt;		
		
			</pre><p>启动 nacos</p><pre class="screen">
		
[root@localhost ~]# python3 docker.py -e experiment up nacos
mysql is up-to-date
Starting nacos ... done

[root@localhost ~]# python3 docker.py -e experiment ps 
    Name                   Command               State                                                         Ports                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------                            
mysql           docker-entrypoint.sh --soc ...   Up      0.0.0.0:3306-&gt;3306/tcp,:::3306-&gt;3306/tcp, 33060/tcp                                                              
nacos           bin/docker-startup.sh            Up      0.0.0.0:8848-&gt;8848/tcp,:::8848-&gt;8848/tcp, 0.0.0.0:9555-&gt;9555/tcp,:::9555-&gt;9555/tcp,                              
                                                         0.0.0.0:9848-&gt;9848/tcp,:::9848-&gt;9848/tcp   		
		
			</pre><p>查看启动端口</p><pre class="screen">
		
[root@localhost ~]# ss -lnt | grep -E "(8848|9848)"
LISTEN 0      1024         0.0.0.0:8848       0.0.0.0:*          
LISTEN 0      1024         0.0.0.0:9848       0.0.0.0:*          
LISTEN 0      1024            [::]:8848          [::]:*          
LISTEN 0      1024            [::]:9848          [::]:*   		
		
			</pre><p>测试配置中心</p><pre class="screen">
		
[root@localhost ~]# curl -X POST "http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=nacos.cfg.dataId&amp;group=test&amp;content=helloWorld"
true

[root@localhost ~]# curl -X GET "http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=nacos.cfg.dataId&amp;group=test"
helloWorld
		
			</pre><p>登陆 Web 界面 http://192.168.30.12:8848/nacos/ 默认的账号密码是：nacos/nacos </p></section><section class="section" id="id1419"><div class="titlepage"><div><div><h4 class="title">Kubernetes 安装 Nacos</h4></div></div></div><p>创建 nacos 数据库用户</p><pre class="programlisting">
			
CREATE USER 'nacos'@'%' IDENTIFIED BY 'nacos';

GRANT ALL PRIVILEGES ON nacos.* TO 'nacos'@'%';

SHOW GRANTS FOR 'nacos'@'%';			
			
			</pre><p> 前往 <a class="ulink" href="https://github.com/alibaba/nacos/blob/master/distribution/conf/nacos-mysql.sql" target="_top">https://github.com/alibaba/nacos/blob/master/distribution/conf/nacos-mysql.sql</a>
				下来SQL文件，恢复到 nacos 数据中。 </p><pre class="programlisting">
			
import sys
sys.path.insert(0, '/Users/neo/workspace/devops')
from netkiller.kubernetes import *
namespace = 'default'

config = ConfigMap('nacos')
config.apiVersion('v1')
config.metadata().name('nacos').namespace(namespace)
config.data({
    'mysql.host': "rm-bp1g441na9an26wsb.mysql.rds.aliyuncs.com",
    'mysql.port': "3306",
    'mysql.dbname': "nacos",
    'mysql.user': "nacos",
    'mysql.password': "nacos"
})
# config.debug()

statefulSet = StatefulSet()
statefulSet = StatefulSet()
statefulSet.apiVersion('apps/v1')
statefulSet.metadata().name('nacos').labels(
    {'app': 'nacos'}).namespace(namespace)
statefulSet.spec().replicas(3)
statefulSet.spec().serviceName('nacos')
statefulSet.spec().selector({'matchLabels': {'app': 'nacos'}})
statefulSet.spec().template().metadata().labels({'app': 'nacos'})
statefulSet.spec().template().metadata().annotations(
    {'pod.alpha.kubernetes.io/initialized': "true"})
# statefulSet.spec().template().spec().affinity().nodeAffinity({
#     'requiredDuringSchedulingIgnoredDuringExecution': [
#         {'labelSelector': {
#             'matchExpressions': [
#                 {'key': 'app',
#                  'operator': 'In',
#                  'values': ['nacos']
#                  }]
#             },
#         'topologyKey': "kubernetes.io/hostname"
#         }
#     ]
# })
statefulSet.spec().template().spec().containers().name('nacos').imagePullPolicy(Define.containers.imagePullPolicy.IfNotPresent).image(
    'nacos/nacos-server:latest').resources(
        # {'requests': {
        # # 'cpu':'200m',
        # 'memory': "2Gi"}}
        ).ports([
        {'name':'client','containerPort': 8848},
        {'name':'client-rpc','containerPort': 9848},
        {'name':'raft-rpc','containerPort': 9849}
    ]).env([
        {'name': 'TZ', 'value': 'Asia/Shanghai'},
        {'name': 'LANG', 'value': 'en_US.UTF-8'},
        {'name': 'NACOS_REPLICAS', 'value': '1'},

        # {'name': 'SPRING_DATASOURCE_PLATFORM', 'value': 'mysql'},
        # {'name': 'MYSQL_SERVICE_HOST', 'value': 'mysql-0.mysql.default.svc.cluster.local'},
        {'name': 'MYSQL_SERVICE_HOST', 'valueFrom':{'configMapKeyRef':{'name': 'nacos','key': 'mysql.host'}}},
        {'name': 'MYSQL_SERVICE_PORT', 'valueFrom':{'configMapKeyRef':{'name': 'nacos','key': 'mysql.port'}}},
        {'name': 'MYSQL_SERVICE_DB_NAME', 'valueFrom':{'configMapKeyRef':{'name': 'nacos','key': 'mysql.dbname'}}},
        {'name': 'MYSQL_SERVICE_USER', 'valueFrom':{'configMapKeyRef':{'name': 'nacos','key': 'mysql.user'}}},
        {'name': 'MYSQL_SERVICE_PASSWORD', 'valueFrom':{'configMapKeyRef':{'name': 'nacos','key': 'mysql.password'}}},
        # {'name': 'MYSQL_SERVICE_DB_PARAM', 'value': 'characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useSSL=false&amp;serverTimezone=GMT%2B8'},
        
        {'name': 'NACOS_SERVER_PORT', 'value': '8848'},
        {'name': 'NACOS_APPLICATION_PORT', 'value': '8848'},
        {'name': 'PREFER_HOST_MODE', 'value': 'hostname'},
        {'name': 'NACOS_SERVERS', 'value': 'nacos-0.nacos.default.svc.cluster.local:8848 nacos-1.nacos.default.svc.cluster.local:8848 nacos-2.nacos.default.svc.cluster.local:8848'},

        # {'name': 'JVM_XMX', 'value': '4g'},
        # {'name': 'NACOS_DEBUG', 'value': 'true'},
        # {'name': 'TOMCAT_ACCESSLOG_ENABLED', 'value': 'true'},
    ])

# statefulSet.debug()

service = Service()
service.metadata().name('nacos')
service.metadata().namespace(namespace)
service.metadata().labels({'app':'nacos'})
service.spec().selector({'app': 'nacos'})
service.spec().type('ClusterIP')
service.spec().ports([
    {'name': 'server', 'protocol': 'TCP', 'port': 8848, 'targetPort': 8848},
    {'name': 'client-rpc', 'protocol': 'TCP', 'port': 9848, 'targetPort': 9848},
    {'name': 'raft-rpc', 'protocol': 'TCP', 'port': 9555, 'targetPort': 9555}
])

# service.debug()

ingress = Ingress()
ingress.apiVersion('networking.k8s.io/v1')
ingress.metadata().name('nacos')
ingress.metadata().namespace(namespace)
# ingress.metadata().annotations({'kubernetes.io/ingress.class': 'nginx'})
ingress.spec().rules([{
    'host': 'nacos.netkiller.com',
    'http':{
        'paths': [{
            'pathType': Define.Ingress.pathType.Prefix,
            'path': '/nacos', 
            'backend':{
                'service':{
                    'name':'nacos', 
                    'port':{'number': 8848}
                }
            }}]
}}])
# ingress.debug()

kubernetes = Kubernetes('/Volumes/Data/kubeconfig')
compose = Compose('nacos')
compose.add(config)
compose.add(statefulSet)
compose.add(service)
compose.add(ingress)
kubernetes.compose(compose)
kubernetes.main()

			
			</pre><pre class="screen">
			
			</pre></section><section class="section" id="id1420"><div class="titlepage"><div><div><h4 class="title">IP限制，白名单</h4></div></div></div><pre class="screen">
			 
	location /nacos {
        allow 192.168.0.0/24;
        allow 172.18.0.0/16;
        allow 202.104.66.10;        
        deny all;

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://192.168.0.10:8848;
    }
			
			</pre></section><section class="section" id="id1421"><div class="titlepage"><div><div><h4 class="title">防火墙配置</h4></div></div></div><p>配置防火墙，限制 8848 端口的访问策略，防止本地或其他服务注册到 Nacos 中。</p><pre class="screen">
			 
$ iptables -A INPUT -s 172.18.5.0/24 -p tcp --dport 8848 -j REJECT
			
			</pre><p>172.18.5.0/24 是办公网络，添加上面IP规则，可以防止开发人的电脑注册到测试环境。</p><p>删除规则</p><p>删除方法一</p><pre class="screen">
			 
$ iptables -L -n --line-number | grep 8848
8    REJECT     tcp  --  172.18.5.0/24        0.0.0.0/0            tcp dpt:8848 reject-with icmp-port-unreachable
134  ACCEPT     tcp  --  0.0.0.0/0            172.17.0.119         tcp dpt:8848

$ iptables -D INPUT 8
			
			</pre><p>删除方法二</p><pre class="screen">
			 
$ iptables -D INPUT -s 172.18.5.0/24 -p tcp --dport 8848 -j REJECT
			
			</pre></section></section></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="../ch68s02.xhtml">上一页</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="../pt05.xhtml">上一级</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="ch69s02.xhtml">下一页</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">注册发现 </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../../index.xhtml">起始页</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> Kubernetes 部署微服务</td></tr></table></div></footer></body></html>