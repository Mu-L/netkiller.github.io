<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>第 55 章 Spring Data with Elasticsearch</title><link rel="stylesheet" type="text/css" href="../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="ch54s07.xhtml" title="FAQ"/><link rel="next" href="ch55s02.xhtml" title="集群模式"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">第 55 章 Spring Data with Elasticsearch</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="ch54s07.xhtml">上一页</a> </td><th style="width: 60%; text-align: center; ">部分 III. Spring Data</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="ch55s02.xhtml">下一页</a></td></tr></table><hr/></div></header><section class="chapter" id="elasticsearch"><div class="titlepage"><div><div><h2 class="title">第 55 章 Spring Data with Elasticsearch</h2></div></div></div><div class="toc"><div class="toc-title">目录</div><ul class="toc"><li><span class="section"><a href="ch55.xhtml#id1235">内嵌 Elasticsearch</a></span><ul><li><span class="section"><a href="ch55.xhtml#id1229">Maven</a></span></li><li><span class="section"><a href="ch55.xhtml#id1230">src/main/resources/application.properties</a></span></li><li><span class="section"><a href="ch55.xhtml#id1231">Domain Class</a></span></li><li><span class="section"><a href="ch55.xhtml#id1232">ElasticsearchRepository</a></span></li><li><span class="section"><a href="ch55.xhtml#id1233">SearchRestController</a></span></li><li><span class="section"><a href="ch55.xhtml#id1234">测试</a></span></li></ul></li><li><span class="section"><a href="ch55s02.xhtml">集群模式</a></span></li><li><span class="section"><a href="ch55s03.xhtml">Document</a></span></li><li><span class="section"><a href="ch55s04.xhtml">Elasticsearch 删除操作</a></span></li><li><span class="section"><a href="ch55s05.xhtml">FAQ</a></span><ul><li><span class="section"><a href="ch55s05.xhtml#id1236">java.lang.IllegalStateException: Received message from unsupported version: [2.0.0] minimal compatible version is: [5.0.0]</a></span></li></ul></li></ul></div><section class="section" id="id1235"><div class="titlepage"><div><div><h2 class="title" style="clear: both">内嵌 Elasticsearch</h2></div></div></div><p>内嵌 Elasticsearch 应用，你不需要一个 Elasticsearch 服务器，启动 Spring boot 即可使用 Elasticsearch 服务。</p><section class="section" id="id1229"><div class="titlepage"><div><div><h3 class="title">Maven</h3></div></div></div><p>需要下面两个依赖</p><pre class="screen">
			
		&lt;dependency&gt;
			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
			&lt;artifactId&gt;spring-boot-starter-data-elasticsearch&lt;/artifactId&gt;
		&lt;/dependency&gt;
		&lt;!-- com.sun.jna for elasticsearch --&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;com.sun.jna&lt;/groupId&gt;
			&lt;artifactId&gt;jna&lt;/artifactId&gt;
			&lt;version&gt;3.0.9&lt;/version&gt;
		&lt;/dependency&gt;			
			
			</pre><pre class="programlisting">
			
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;
	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

	&lt;groupId&gt;com.example&lt;/groupId&gt;
	&lt;artifactId&gt;api&lt;/artifactId&gt;
	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
	&lt;packaging&gt;jar&lt;/packaging&gt;

	&lt;name&gt;api&lt;/name&gt;
	&lt;description&gt;Demo project for Spring Boot&lt;/description&gt;

	&lt;parent&gt;
		&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
		&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
		&lt;version&gt;1.5.6.RELEASE&lt;/version&gt;
		&lt;relativePath /&gt; &lt;!-- lookup parent from repository --&gt;
	&lt;/parent&gt;

	&lt;properties&gt;
		&lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
		&lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;
		&lt;java.version&gt;1.8&lt;/java.version&gt;
	&lt;/properties&gt;

	&lt;dependencies&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
			&lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
			&lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
			&lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
			&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
			&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;mysql&lt;/groupId&gt;
			&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;
			&lt;scope&gt;runtime&lt;/scope&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
			&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
			&lt;scope&gt;test&lt;/scope&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
			&lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
			&lt;artifactId&gt;spring-boot-starter-data-elasticsearch&lt;/artifactId&gt;
		&lt;/dependency&gt;
		&lt;!-- https://mvnrepository.com/artifact/javax.persistence/persistence-api --&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;javax.persistence&lt;/groupId&gt;
			&lt;artifactId&gt;persistence-api&lt;/artifactId&gt;
			&lt;version&gt;1.0.2&lt;/version&gt;
		&lt;/dependency&gt;
		&lt;!-- https://mvnrepository.com/artifact/org.json/json --&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.json&lt;/groupId&gt;
			&lt;artifactId&gt;json&lt;/artifactId&gt;
		&lt;/dependency&gt;
		&lt;!-- com.sun.jna for elasticsearch --&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;com.sun.jna&lt;/groupId&gt;
			&lt;artifactId&gt;jna&lt;/artifactId&gt;
			&lt;version&gt;3.0.9&lt;/version&gt;
		&lt;/dependency&gt;

	&lt;/dependencies&gt;

	&lt;build&gt;
		&lt;plugins&gt;
			&lt;plugin&gt;
				&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
				&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
			&lt;/plugin&gt;

			&lt;plugin&gt;
				&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
				&lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;
				&lt;configuration&gt;
					&lt;skip&gt;true&lt;/skip&gt;
				&lt;/configuration&gt;
			&lt;/plugin&gt;
		&lt;/plugins&gt;
	&lt;/build&gt;
&lt;/project&gt;

			
			</pre></section><section class="section" id="id1230"><div class="titlepage"><div><div><h3 class="title">src/main/resources/application.properties</h3></div></div></div><pre class="programlisting">
			
spring.data.elasticsearch.repositories.enabled=true
#spring.data.elasticsearch.cluster-name=elasticsearch
#spring.data.elasticsearch.cluster-nodes=119.29.241.95:9200
spring.data.elasticsearch.local=false
spring.data.elasticsearch.properties.transport.tcp.connect_timeout=60s
spring.data.elasticsearch.properties.host=127.0.0.1
spring.data.elasticsearch.properties.port=9200
spring.data.elasticsearch.properties.path.home=/tmp
			
			</pre></section><section class="section" id="id1231"><div class="titlepage"><div><div><h3 class="title">Domain Class</h3></div></div></div><pre class="programlisting">
			
package com.example.api.domain.elasticsearch;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Id;

import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.elasticsearch.annotations.DateFormat;
import org.springframework.data.elasticsearch.annotations.Document;
import org.springframework.data.elasticsearch.annotations.Field;
import org.springframework.data.elasticsearch.annotations.FieldIndex;
import org.springframework.data.elasticsearch.annotations.FieldType;

import com.fasterxml.jackson.annotation.JsonFormat;

@Document(indexName = "information", type = "article")
public class Article implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8789505663320446079L;
	@Id
	private int id;
	private String title;
	private String description;
	private String author;
	private String source;
	private String content;
	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyyMMdd'T'HHmmss.SSS'Z'")
    @Field(type = FieldType.Date, format = DateFormat.basic_date_time, index = FieldIndex.not_analyzed)
    @CreatedDate
	private Date ctime;

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public Date getCtime() {
		return ctime;
	}

	public void setCtime(Date ctime) {
		this.ctime = ctime;
	}

	public String getAuthor() {
		return author;
	}

	public void setAuthor(String author) {
		this.author = author;
	}

	public String getSource() {
		return source;
	}

	public void setSource(String source) {
		this.source = source;
	}

	public String getContent() {
		return content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Override
	public String toString() {
		return "Article [id=" + id + ", title=" + title + ", description=" + description + ", author=" + author + ", source=" + source + ", content=" + content + ", ctime=" + ctime + "]";
	}

}

			
			</pre></section><section class="section" id="id1232"><div class="titlepage"><div><div><h3 class="title">ElasticsearchRepository</h3></div></div></div><pre class="programlisting">
			
package com.example.api.repository.elasticsearch;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.elasticsearch.repository.ElasticsearchRepository;
import org.springframework.stereotype.Repository;

import com.example.api.domain.elasticsearch.Article;

@Repository
public interface ArticleElasticsearchRepository extends ElasticsearchRepository&lt;Article, Integer&gt; {
	Page&lt;Article&gt; findByTitleLike(String title, Pageable page);

	Page&lt;Article&gt; findByDescription(String description, Pageable pageable);

	Page&lt;Article&gt; findByDescriptionNot(String description, Pageable pageable);

	Page&lt;Article&gt; findByDescriptionLike(String description, Pageable pageable);
}

			
			</pre></section><section class="section" id="id1233"><div class="titlepage"><div><div><h3 class="title">SearchRestController</h3></div></div></div><pre class="programlisting">
			
package com.example.api.restful;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.web.PageableDefault;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.api.domain.elasticsearch.Article;
import com.example.api.repository.elasticsearch.ArticleElasticsearchRepository;

@RestController
@RequestMapping("/restful/search")
public class SearchRestController {
	@Autowired
	private ArticleElasticsearchRepository articleElasticsearchRepository;
	
	@RequestMapping(value = "/article/create")
	public  Article create() {
		Article article = new Article();
		article.setId(1);
		article.setTitle("sssss");
		article.setContent("test");
		return articleElasticsearchRepository.save(article);
	}
	@RequestMapping(value = "/article/{articleId}")
	public  Article get(@PathVariable int articleId) {
		return articleElasticsearchRepository.findOne(articleId);
	}
}

			
			</pre></section><section class="section" id="id1234"><div class="titlepage"><div><div><h3 class="title">测试</h3></div></div></div><pre class="screen">
				MacBook-Pro:~ neo$ curl http://test:test@localhost:8443/restful/search/article/create.json
				{"id":1,"title":"sssss","description":null,"author":null,"source":null,"content":"test","ctime":null}

				MacBook-Pro:~ neo$ curl http://test:test@localhost:8443/restful/search/article/1.json
				{"id":1,"title":"sssss","description":null,"author":null,"source":null,"content":"test","ctime":null}
			</pre></section></section></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="ch54s07.xhtml">上一页</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="pt03.xhtml">上一级</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="ch55s02.xhtml">下一页</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">FAQ </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../index.xhtml">起始页</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> 集群模式</td></tr></table></div></footer></body></html>