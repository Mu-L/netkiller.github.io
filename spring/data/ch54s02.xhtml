<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>MongoDB Â§öÊï∞ÊçÆÊ∫ê</title><link rel="stylesheet" type="text/css" href="../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="ch54.xhtml" title="Á¨¨¬†54¬†Á´†¬†Spring Data with MongoDB"/><link rel="next" href="ch54s03.xhtml" title="@Document"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">MongoDB Â§öÊï∞ÊçÆÊ∫ê</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="ch54.xhtml">‰∏ä‰∏ÄÈ°µ</a>¬†</td><th style="width: 60%; text-align: center; ">Á¨¨¬†54¬†Á´†¬†Spring Data with MongoDB</th><td style="width: 20%; text-align: right; ">¬†<a accesskey="n" href="ch54s03.xhtml">‰∏ã‰∏ÄÈ°µ</a></td></tr></table><hr/></div></header><section class="section" id="id5593"><div class="titlepage"><div><div><h2 class="title" style="clear: both">MongoDB Â§öÊï∞ÊçÆÊ∫ê</h2></div></div></div><section class="section" id="id1206"><div class="titlepage"><div><div><h3 class="title">Maven</h3></div></div></div><pre class="screen">
			
		&lt;dependency&gt;
			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
			&lt;artifactId&gt;spring-boot-starter-data-mongodb&lt;/artifactId&gt;
		&lt;/dependency&gt;			
			
			</pre></section><section class="section" id="id1207"><div class="titlepage"><div><div><h3 class="title">Application Á¶ÅÊ≠¢Ëá™Âä®ÈÖçÁΩÆ MongoDB</h3></div></div></div><p>exclude = { MongoAutoConfiguration.class, MongoDataAutoConfiguration.class }</p><pre class="programlisting">
			
package cn.netkiller;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration;
import org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration;
import org.springframework.boot.context.ApplicationPidFileWriter;

@SpringBootApplication(exclude = { MongoAutoConfiguration.class, MongoDataAutoConfiguration.class })
public class Application {

	public static void main(String[] args) {

		System.out.println("Starting...");
		SpringApplication springApplication = new SpringApplication(Application.class);
		springApplication.addListeners(new ApplicationPidFileWriter());
		springApplication.run(args);
	}
}
			
			
			</pre></section><section class="section" id="id1208"><div class="titlepage"><div><div><h3 class="title">application.properties Êñ∞Â¢ûÈÖçÁΩÆÈ°π</h3></div></div></div><pre class="programlisting">
			
mongodb.primary.uri=mongodb://netkiller:chen@192.168.30.10:27017/news
mongodb.secondary.uri=mongodb://netkiller:chen@192.168.30.5:27017/member
			
			</pre></section><section class="section" id="id1209"><div class="titlepage"><div><div><h3 class="title">MongoDB ÈÖçÁΩÆÁ±ª</h3></div></div></div><pre class="programlisting">
			
package cn.netkiller.config;

import org.springframework.data.mongodb.MongoDatabaseFactory;
import org.springframework.data.mongodb.core.SimpleMongoClientDatabaseFactory;
import com.mongodb.ConnectionString;

public abstract class AbstractMongoConfigure {

	public MongoDatabaseFactory mongoDatabaseFactory(String uri) {
		ConnectionString connectionString = new ConnectionString(uri);
		return new SimpleMongoClientDatabaseFactory(connectionString);
	}
}
			
			</pre><p>ÈÖçÁΩÆÂ§öÊï∞ÊçÆÊ∫ê</p><pre class="programlisting">
			
package cn.netkiller.config;

import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.autoconfigure.mongo.MongoProperties;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.data.mongodb.repository.config.EnableMongoRepositories;

@Configuration
@ConfigurationProperties(prefix = "mongodb")
@EnableMongoRepositories(basePackages = { "cn.netkiller.repository" }, mongoTemplateRef = MultipleMongoConfigure.primaryMongoTemplate)
public class MultipleMongoConfigure extends AbstractMongoConfigure {

	protected static final String primaryMongoTemplate = "primaryMongoTemplate";
	protected static final String secondaryMongoTemplate = "secondaryMongoTemplate";

	private MongoProperties primary = new MongoProperties();
	private MongoProperties secondary = new MongoProperties();

	public MongoProperties getPrimary() {
		return primary;
	}

	public void setPrimary(MongoProperties primary) {
		this.primary = primary;
	}

	public MongoProperties getSecondary() {
		return secondary;
	}

	public void setSecondary(MongoProperties secondary) {
		this.secondary = secondary;
	}

	public MultipleMongoConfigure() {
	}

	@Primary
	@Bean(name = MultipleMongoConfigure.primaryMongoTemplate)
	@Qualifier(value = MultipleMongoConfigure.primaryMongoTemplate)
	public MongoTemplate primaryMongoTemplate() throws Exception {
		String uri = this.getPrimary().getUri();
		return new MongoTemplate(mongoDatabaseFactory(uri));
	}

	@Bean(name = "secondaryMongoTemplate")
	@Qualifier("secondaryMongoTemplate")
	public MongoTemplate secondaryMongoTemplate() throws Exception {
		String uri = this.getSecondary().getUri();
		return new MongoTemplate(mongoDatabaseFactory(uri));
	}

}
			
			</pre></section><section class="section" id="id1210"><div class="titlepage"><div><div><h3 class="title">ÂàõÂª∫ Document ÂÖ≥Á≥ªÊò†Â∞ÑÁ±ª </h3></div></div></div><pre class="programlisting">
			
package cn.netkiller.domain;

import java.io.Serializable;
import java.util.Date;

import org.springframework.data.mongodb.core.mapping.Document;
import org.springframework.data.mongodb.core.mapping.MongoId;

import com.fasterxml.jackson.annotation.JsonFormat;

@Document
public class User implements Serializable {
	private static final long serialVersionUID = -3258839839160856613L;
	// private Long id;
	@MongoId
	private String id;
	private String useruame;
	private String password;
	private String name;
	private String sex;
	private Integer age;
	@JsonFormat(pattern = "yyyy-MM-dd", timezone = "GMT+8")
	private Date birthday;

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getUseruame() {
		return useruame;
	}

	public void setUseruame(String useruame) {
		this.useruame = useruame;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getSex() {
		return sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}

	public Integer getAge() {
		return age;
	}

	public void setAge(Integer age) {
		this.age = age;
	}

	public Date getBirthday() {
		return birthday;
	}

	public void setBirthday(Date birthday) {
		this.birthday = birthday;
	}

}			
			
			</pre></section><section class="section" id="id1211"><div class="titlepage"><div><div><h3 class="title">ÊµãËØïÊéßÂà∂Âô®</h3></div></div></div><pre class="programlisting">
			
package cn.netkiller.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import cn.netkiller.domain.User;
import cn.netkiller.service.UserService;

@RestController
public class TestMongoController {

	@Autowired
	@Qualifier(value = "primaryMongoTemplate")
	private MongoTemplate primaryMongoTemplate;

	@Autowired
	@Qualifier(value = "secondaryMongoTemplate")
	private MongoTemplate secondaryMongoTemplate;

	public TestMongoController() {
		// TODO Auto-generated constructor stub
	}

	@GetMapping("/mongo/primary/save")
	public String primarysave() {
		User user = new User();
		user.setUseruame("netkiller");
		user.setPassword("123456");
		primaryMongoTemplate.save(user);
		return "Success\r\n";
	}

	@GetMapping("/mongo/secondary/save")
	public String secondaryMongoTemplate() {
		User user = new User();
		user.setUseruame("netkiller");
		user.setPassword("123456");
		secondaryMongoTemplate.save(user);
		return "Success\r\n";
	}
}			
			
			</pre></section><section class="section" id="id1212"><div class="titlepage"><div><div><h3 class="title">ÊµãËØï</h3></div></div></div><p>ÂêØÂä® Springboot ÂèØ‰ª•ÁúãÂà∞‰∏ãÈù¢üëáÊó•ÂøóÔºå‰∏§‰∏™MongoDBÈÉΩÈìæÊé•ÊàêÂäü„ÄÇ</p><pre class="screen">
			
2021-10-14 19:29:50.037  INFO 93698 --- [           main] org.mongodb.driver.cluster               : Cluster created with settings {hosts=[192.168.30.10:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2021-10-14 19:29:50.156  INFO 93698 --- [168.30.10:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:1, serverValue:126}] to 192.168.30.10:27017
2021-10-14 19:29:50.157  INFO 93698 --- [168.30.10:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=192.168.30.10:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=31466638}
2021-10-14 19:29:50.157  INFO 93698 --- [168.30.10:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:127}] to 192.168.30.10:27017
2021-10-14 19:29:50.266  INFO 93698 --- [           main] org.mongodb.driver.cluster               : Cluster created with settings {hosts=[192.168.30.5:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2021-10-14 19:29:50.272  INFO 93698 --- [.168.30.5:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:3, serverValue:969}] to 192.168.30.5:27017
2021-10-14 19:29:50.272  INFO 93698 --- [.168.30.5:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:4, serverValue:968}] to 192.168.30.5:27017
2021-10-14 19:29:50.272  INFO 93698 --- [.168.30.5:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=192.168.30.5:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=13, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2345376}			
			
			</pre><pre class="programlisting">
			
neo@MacBook-Pro-Neo ~ % curl http://localhost:8080/mongo/primary/save  
Success

neo@MacBook-Pro-Neo ~ % curl http://localhost:8080/mongo/secondary/save
Success
			
			</pre><p>Áé∞Âú®Âéª‰∏§‰∏™ MongoDB Êï∞ÊçÆÊü•ÁúãËæìÂÖ•ÊòØÂê¶‰øùÂ≠òÊàêÂäü„ÄÇ</p><p>Âú®‰ΩøÁî® curl Ë∞ÉÁî®ÁöÑÊó∂ÂÄôÔºåÊó•Âøó‰ºöÊòæÁ§∫ÈìæÊé•‰∏§‰∏™ MongoDB ÁöÑÁä∂ÊÄÅ„ÄÇ</p><pre class="screen">
			
2021-10-14 19:34:27.795  INFO 93698 --- [  XNIO-1 task-1] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:5, serverValue:970}] to 192.168.30.5:27017
2021-10-14 19:34:31.096  INFO 93698 --- [  XNIO-1 task-1] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:6, serverValue:130}] to 192.168.30.10:27017			
			
			</pre></section></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="ch54.xhtml">‰∏ä‰∏ÄÈ°µ</a>¬†</td><td style="width: 20%; text-align: center; "><a accesskey="u" href="ch54.xhtml">‰∏ä‰∏ÄÁ∫ß</a></td><td style="width: 40%; text-align: right; ">¬†<a accesskey="n" href="ch54s03.xhtml">‰∏ã‰∏ÄÈ°µ</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">Á¨¨¬†54¬†Á´†¬†Spring Data with MongoDB¬†</td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../index.xhtml">Ëµ∑ÂßãÈ°µ</a></td><td style="width: 40%; text-align: right; vertical-align: top; ">¬†@Document</td></tr></table></div></footer></body></html>