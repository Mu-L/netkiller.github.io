<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>实例参考</title><link rel="stylesheet" type="text/css" href="../../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="ch51s10.xhtml" title="MapSqlParameterSource"/><link rel="next" href="../mysql/ch52.xhtml" title="第 52 章 Spring Data with MySQL"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">实例参考</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="ch51s10.xhtml">上一页</a> </td><th style="width: 60%; text-align: center; ">第 51 章 Spring Data with JdbcTemplate</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="../mysql/ch52.xhtml">下一页</a></td></tr></table><hr/></div></header><section class="section" id="jdbc.example"><div class="titlepage"><div><div><h2 class="title" style="clear: both">实例参考</h2></div></div></div><section class="section" id=""><div class="titlepage"><div><div><h3 class="title">参数传递技巧</h3></div></div></div><pre class="programlisting">
			
	public List&lt;PendingTransaction&gt; getPendingTransaction(String address, String contractAddress) {
		List&lt;PendingTransaction&gt; pendingTransactions = new ArrayList&lt;PendingTransaction&gt;();
		String sql;
		Object[] param;
		if (contractAddress == null || contractAddress.equals("")) {
			sql = "select * from pending_transaction where from_address = ? and contract_address IS NULL";
			param = new Object[] { address };
		} else {
			sql = "select * from pending_transaction where from_address = ? and contract_address = ?";
			param = new Object[] { address, contractAddress };
		}
		List&lt;Map&lt;String, Object&gt;&gt; rows = jdbcTemplate.queryForList(sql, param);

		for (Map&lt;String, Object&gt; row : rows) {
			PendingTransaction pendingTransaction = new PendingTransaction();
			pendingTransaction.setHash((String) row.get("hash"));
			pendingTransaction.setFrom((String) row.get("from_address"));
			pendingTransaction.setTo((String) row.get("to_address"));
			pendingTransaction.setValue((String) row.get("value"));
			pendingTransaction.setGas((String) row.get("gas"));
			pendingTransaction.setSymbol((String) row.get("symbol"));
			pendingTransaction.setContractAddress((String) row.get("contractAddress"));
			pendingTransactions.add(pendingTransaction);
		}
		logger.info("PendingTransaction:" + pendingTransactions.toString());
		return pendingTransactions;
	}			
			
			</pre></section></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="ch51s10.xhtml">上一页</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="ch51.xhtml">上一级</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="../mysql/ch52.xhtml">下一页</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">MapSqlParameterSource </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../../index.xhtml">起始页</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> 第 52 章 Spring Data with MySQL</td></tr></table></div></footer></body></html>