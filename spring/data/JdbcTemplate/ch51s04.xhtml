<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>queryForObject</title><link rel="stylesheet" type="text/css" href="../../docbook.css"/><meta name="generator" content="DocBook XSL Stylesheets Vsnapshot"/><meta name="keywords" content="Spring, Spring Boot, Spring Cloud, Spring Eureka, Spring Config"/><link rel="prev" href="ch51s03.xhtml" title="queryForLong"/><link rel="next" href="ch51s05.xhtml" title="queryForList"/></head><body><header><div class="navheader"><table style="width: 100%; "><tr><th style="text-align: center; " colspan="3">queryForObject</th></tr><tr><td style="width: 20%; text-align: left; "><a accesskey="p" href="ch51s03.xhtml">上一页</a> </td><th style="width: 60%; text-align: center; ">第 51 章 Spring Data with JdbcTemplate</th><td style="width: 20%; text-align: right; "> <a accesskey="n" href="ch51s05.xhtml">下一页</a></td></tr></table><hr/></div></header><section class="section" id="queryForObject"><div class="titlepage"><div><div><h2 class="title" style="clear: both">queryForObject</h2></div></div></div><section class="section" id="id1095"><div class="titlepage"><div><div><h3 class="title">返回整形与字符型</h3></div></div></div><pre class="programlisting">			
			
Integer age = queryForObject("select age from emp", Integer.class);
String name = queryForObject("select name from emp",String.class);			
			
			</pre></section><section class="section" id="id1096"><div class="titlepage"><div><div><h3 class="title">查询 Double 类型数据库</h3></div></div></div><pre class="programlisting">
				
	private double getSumByMemberId(int memberId) {
		double result = 0.0d;
		String sql = "SELECT sum(o.price::NUMERIC) as total FROM public.order o group by member_id ="+ memberId;
		try {
			result = jdbcTemplate.queryForObject(sql, Double.class);
		} catch (org.springframework.dao.EmptyResultDataAccessException e) {
			log.info("{} {}", MemberId, e.toString());
		}
		return result;
	}
				
			</pre></section><section class="section" id="id1097"><div class="titlepage"><div><div><h3 class="title">返回日期</h3></div></div></div><p>注意 Date 是 java.util 不是 java.sql</p><pre class="programlisting">
			
	private static final Logger log = LoggerFactory.getLogger(ScheduledTasks.class);
	private static final SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-mm-dd HH:mm:ss");
	
	@Autowired
	private JdbcTemplate jdbcTemplate;
	
	@Scheduled(initialDelay = 1000, fixedRate = 60000)
	public void currentDate() {
		Date date = jdbcTemplate.queryForObject("select sysdate from dual", Date.class);
		log.info("The oracle sysdate is {}", dateFormat.format(date));
	}
			
			</pre></section><section class="section" id="id1098"><div class="titlepage"><div><div><h3 class="title">返回结果集</h3></div></div></div><pre class="programlisting">
				
	@Autowired
	private JdbcTemplate jdbcTemplate;

	@RequestMapping(value = "/article")
	public @ResponseBody String dailyStats(@RequestParam Integer id) {
		String query = "SELECT id, title, content from article where id = " + id;

		return jdbcTemplate.queryForObject(query, (resultSet, i) -&gt; {
			System.out.println(resultSet.getLong(1) + "," + resultSet.getString(2) + "," + resultSet.getString(3));
			return (resultSet.getLong(1) + "," + resultSet.getString(2) + "," + resultSet.getString(3));
		});

	}			
				
			</pre></section><section class="section" id="id1099"><div class="titlepage"><div><div><h3 class="title">通过 "?" 向SQL传递参数</h3></div></div></div><pre class="programlisting">
				
package com.example.api.restful;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.example.api.pojo.ResponseRestful;

@RestController
@RequestMapping("/restful/cms")
public class CmsRestController {
	@Autowired
	private JdbcTemplate jdbcTemplate;

	@RequestMapping(value = "/article/update/count/{articleId}", method = RequestMethod.GET, produces = { "application/xml", "application/json" })
	public ResponseRestful updateCount(@PathVariable int articleId) {
		String sql = "SELECT count(*) FROM cms.article WHERE id &gt; ?";
		int count = jdbcTemplate.queryForObject(sql, new Object[] { articleId }, Integer.class);
		return new ResponseRestful(true, 1, "文章更新", count);
	}
}
				
			</pre></section><section class="section" id="id1100"><div class="titlepage"><div><div><h3 class="title">RowMapper 记录映射</h3></div></div></div><pre class="programlisting">
				
package cn.netkiller.model;

import java.sql.ResultSet;
import java.sql.SQLException;

import org.springframework.jdbc.core.RowMapper;

public class CustomerRowMapper implements RowMapper
{
	public Object mapRow(ResultSet rs, int rowNum) throws SQLException {
		Customer customer = new Customer();
		customer.setId(rs.getInt("ID"));
		customer.setName(rs.getString("NAME"));
		customer.setAge(rs.getInt("AGE"));
		return customer;
	}

}
				
			</pre><pre class="programlisting">
				
public Customer findByCustomerId(int id){

	String sql = "SELECT * FROM CUSTOMER WHERE ID = ?";

	Customer customer = (Customer)getJdbcTemplate().queryForObject(
			sql, new Object[] { id }, new CustomerRowMapper());

	return customer;
}
				
			</pre><p/><pre class="programlisting">
				
Member member = this.jdbcTemplate.queryForObject("select first_name, last_name from member where id = ?",new Object[]{112L},
new RowMapper&lt;Member&gt;() {
    public Actor mapRow(ResultSet rs, int rowNum) throws SQLException {
        Member member = new Member();
        member.setFirstName(rs.getString("first_name"));
        member.setLastName(rs.getString("last_name"));
        return member;
    }
});
				
			</pre></section></section><footer><div class="navfooter"><hr/><table style="width: 100%; "><tr><td style="width: 40%; text-align: left; "><a accesskey="p" href="ch51s03.xhtml">上一页</a> </td><td style="width: 20%; text-align: center; "><a accesskey="u" href="ch51.xhtml">上一级</a></td><td style="width: 40%; text-align: right; "> <a accesskey="n" href="ch51s05.xhtml">下一页</a></td></tr><tr><td style="width: 40%; text-align: left; vertical-align: top; ">queryForLong </td><td style="width: 20%; text-align: center; "><a accesskey="h" href="../../index.xhtml">起始页</a></td><td style="width: 40%; text-align: right; vertical-align: top; "> queryForList</td></tr></table></div></footer></body></html>